(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    284994,       5842]
NotebookOptionsPosition[    277867,       5597]
NotebookOutlinePosition[    278204,       5612]
CellTagsIndexPosition[    278161,       5609]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Syntax", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"k", "[", "x", "]"}], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "//", "FullForm"}]}]], "Input",
 CellChangeTimes->{{3.5776535787361193`*^9, 3.5776535845356407`*^9}, {
  3.577653677841736*^9, 3.5776536854542313`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"k", "[", "x", "]"}], ",", "x"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.577653686916607*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"No", " ", "parenthesis", " ", "are", " ", "needed"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"a", "[", "x", "]"}], " ", 
     RowBox[{"b", "[", "x", "]"}], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{"c", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.577653710403234*^9, 3.577653722252923*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", "x", "]"}], "+", 
  RowBox[{"\[Integral]", 
   RowBox[{
    RowBox[{
     RowBox[{"a", "[", "x", "]"}], " ", 
     RowBox[{"b", "[", "x", "]"}]}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Output",
 CellChangeTimes->{3.5776537230319643`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"But", " ", "you", " ", "can", " ", "use", " ", "them"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"a", "[", "x", "]"}], "+", 
       RowBox[{"b", "[", "x", "]"}]}], ")"}], " ", 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "+", 
   RowBox[{"c", "[", "x", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.5776537546749287`*^9, 3.577653765517796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "[", "x", "]"}], "+", 
  RowBox[{"\[Integral]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"a", "[", "x", "]"}], "+", 
      RowBox[{"b", "[", "x", "]"}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}]], "Output",
 CellChangeTimes->{3.577653766359234*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Superscript", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"x", "^", 
   RowBox[{"(", 
    RowBox[{"a", "+", "b"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.577653854590423*^9, 3.5776538596822653`*^9}}],

Cell[BoxData[
 SuperscriptBox["x", 
  RowBox[{"a", "+", "b"}]]], "Output",
 CellChangeTimes->{3.577653861146093*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Sums", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   UnderoverscriptBox["\[Sum]", 
    RowBox[{"n", "=", "1"}], "\[Infinity]"], 
   FractionBox["1", 
    SuperscriptBox["n", "s"]]}]}]], "Input",
 CellChangeTimes->{{3.57765396935126*^9, 3.5776539811127043`*^9}}],

Cell[BoxData[
 RowBox[{"Zeta", "[", "s", "]"}]], "Output",
 CellChangeTimes->{3.577653989087862*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Parenthesis", " ", "for", " ", "goruping"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(", "term", ")"}]}]], "Input",
 CellChangeTimes->{{3.577654032793894*^9, 3.577654052546493*^9}}],

Cell[BoxData["term"], "Output",
 CellChangeTimes->{3.577654056559367*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Square", " ", "Brackets", " ", "for", " ", "functions"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"f", "[", "x", "]"}]}]], "Input",
 CellChangeTimes->{{3.577654135837493*^9, 3.5776541576015587`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Curly", " ", "Brackets", " ", "for", " ", "lists"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Double", " ", "brackets", " ", "for", " ", "indexing"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.577654202460079*^9, 3.5776542450185757`*^9}}],

Cell[BoxData[
 RowBox[{"v", "[", 
  RowBox[{"[", "i", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.577654301426505*^9, 3.577654302914441*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Lists", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.577654335669813*^9, 3.577654342527751*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.5776543454421453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Anything", " ", "can", " ", "be", " ", "used", " ", "in", " ", "a", " ", 
    "list"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"{", 
   RowBox[{"1", ",", "b", ",", "2", ",", "3", ",", 
    RowBox[{
     RowBox[{"3", " ", "x"}], "\[Equal]", "12"}], ",", 
    RowBox[{"Sqrt", "[", 
     RowBox[{"9", "+", "y"}], "]"}], ",", "\"\<hello\>\""}], "}"}]}]], "Input",\

 CellChangeTimes->{{3.5776543596656713`*^9, 3.577654382153144*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "b", ",", "2", ",", "3", ",", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "\[Equal]", "12"}], ",", 
   SqrtBox[
    RowBox[{"9", "+", "y"}]], ",", "\<\"hello\"\>"}], "}"}]], "Output",
 CellChangeTimes->{3.577654384820814*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Lists", " ", "can", " ", "contain", " ", "other", " ", "lists"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.5776543997288713`*^9, 3.577654410044154*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "10", "]"}]], "Input",
 CellChangeTimes->{{3.577654423648328*^9, 3.577654423652804*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.57765442444809*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.5776544516033173`*^9, 3.577654473854845*^9}}],

Cell[BoxData[
 RowBox[{"Sin", "[", "2", "]"}]], "Output",
 CellChangeTimes->{3.577654475633431*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.577654452554991*^9, 3.577654468001821*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "[", 
  RowBox[{"expr", ",", "n"}], "]"}], "\n", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "attempts", " ", "to", " ", "give", " ", "a", " ", "result", " ", "with", 
     " ", "n"}], "-", 
    RowBox[{"digit", " ", 
     RowBox[{"precision", "."}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.577654516766488*^9, 3.57765452583819*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"N", "::", "precbd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Requested precision \[NoBreak]\\!\\(n\\)\[NoBreak] is not \
a machine-sized real number between $MinPrecision and $MaxPrecision. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/precbd\\\", \
ButtonNote -> \\\"N::precbd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.577654527699747*^9}],

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"expr", ",", "n"}], "]"}]], "Output",
 CellChangeTimes->{3.577654528702652*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Sin", "[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5776545333768167`*^9, 3.577654544352459*^9}}],

Cell[BoxData["0.9092974268256817`"], "Output",
 CellChangeTimes->{3.577654545017722*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Plot", " ", "a", " ", "function"}], ",", 
    RowBox[{
    "with", " ", "the", " ", "range", " ", "of", " ", "the", " ", "plot", " ",
      "specified", " ", "in", " ", "a", " ", "list"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5776545762471943`*^9, 3.577654594784656*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVmHc8Vf8fxyVpmfcSWfca7cK3Imm832nQILJFQxGaKiplq4SQMkNFKZlZ
ReokMlKplJE9su/92Jt+5/fPvY/n43M/57zH6/X+nHvkrc8fsuHl4eH5j/74
/3fNgO5/PDz9YHxcv8iI0wPFQml39Rb3g91JknFzogcy14j0RC/phw3zHVcl
zuuFQJufcZvX9UOBWXtoiWwv7Kw1Ebtk0Q82Zm5Fx3V7IfXD0bG/Wf3wINNK
j/9lL9wMcnxXbj8AqnmZa7rM+uBi8s+lUk4D8FPavf7IiT44VrbB2c5jAM7W
ux0rOdsHmnNHleeFD8BgltnXs1590O/s8nh70QAI1aW9FE7qA8sj3t6v5AbB
pVVeMH6iD9avC90bXjkILT6aWR3+HOA9t1G6tmkQ+qceD2uHcuBnamWfVN8g
TKwIrgmP5YCjKiM4lm8IFnxSd5r7igPpG4KqnqkNwXOG0umFvzmgrHnnRFb4
EKjJSL8uX8qFWZeVaqPxQ6Cv8jJHTIEL396W8GukD0FzOnv+gdVcOLuN/+Xb
0iGIHfe5fVOTC8no3f9xYggSfrz2VLTgwmptV9cfh4fhofJZi/lhXJi8LXOQ
aTcMGuyErRtiuPC59C3b+PIwOLrfXKH7lAv2+yYLawKGgRkbxr8/gwsvdK8s
an43DF6evVfOfeXCciPHcC5rBErsHXL1eQiMPhCxV107AuXDknsP8xMo/p2m
eVFjBCzDX8cbChCwMeU2jOiPgInUlyRBSQJPLU4rzXiOgJ/Mn+cJygTkj9u8
Wtw+AkKFU872ZgTqGzpDXMkIqHd0Ppu2JBBm4XCZTI5A8vO3pe7HCSwyOr+p
UnQUNJZ2NBs7EBjec+1dFIzCieDnMjuuE0gtnIoV2D8KvoLjSYbuBOzRzcPN
ZBTiV8XKmngTaNzsvdP67CgMv3v/aLU/gdK1d8tWPRyFmoVdnaJRBLwShZMe
JozCU3etQ/ExBLYtDwkQzBgF/v0XgpSeEMhghR8cKB2F7hr566PPCTxkPPn9
ZnQU3l5K76zOImASpPh6Ne8YHNODN52vCYgIJEREC44BX6eqXmceAZ95SYc9
lMYgJVG+KPsDgXPjWS3ah8Zgmap+WlA5gZVOmwpzrcZA+OEPT9lvBNoGcp+u
sR+D3WFmQg+/EzDrfX9K2GMMat7Z6tv8JsCw27HX038MXFxd5mZUE/jSXrh6
KGwMNo0kn+bWEtjRWMqpShkDntZWE/VGAtMW+yt0cscgPyq7ekczgZzqr+l5
RWMg8mD3wm2tBFb/+Hkptm4MroSHu/B2EBArqp+wWTgOIffTrpf1EfiGR+uq
xcYBoxtOHeISuPOuJX8vexyK48NmPhMCszkd7us2jUOmfpqC/yCBNxvsjz/S
GgdGakL6zyECl9J7tUT1xmHYxezvwhECXYn980ZOjsONX86oPUYgbvmlTtsL
43CO772N7jgBq/iR0prr4yDUe1ll5wQBSfbVl/tuj8PIJ9mYlZMEfkZP+ueH
jEPkfztTZ2gOWOp6Vjl2HLxXXbX+OEVgT9g/vceJ43B3gVmu8zQBHqaXKiOb
vt6dWxlSMwTeBvExfD6MA/NTmm4qzRmhvi755eNwhfWZpTJL4OVDgbbhqnE4
Giqj/pjmuCfB+9e1jsO9O+eD5/wjEPVcLMuGMw450veVDWkOSYmQiR0fh0sr
j4qE0nwnU+Zm1dwJ8NybqVZCs0fuY46Q8ARk/3aO7ab5KqVkoi01AcyWiH3T
NF/49OK9+7IJ+LVVRPMfzXbla1e8UZ2AU1fqzgzSfOxHelD/lglwqedp+02z
afXG8ZXaE8C9HBidSLNew5tjxw/R+/mjIs/SvKdta1mk1QTYiu/4I0/z9u4P
//20m4D+5hdHiul81MmuqEWXJ6DYdnb5YZqVR0p5d7pPwKrjzhua6Xosmzpw
+rrfBKzT1vUxpllmzo/KzNAJeHSgZOlbup5i84239j2egKbjqsMiNAsI1j5V
Sp6ADxvqmaZ0/fmYVoJWryfAdM3ya3fp/gzJ2TR+/ToB5vUrl5TT/e1R6t7D
XzsByUxK7yfd/9bVZ9O2t0/A0jOp38pG6f6qO3mkTU7AmTsvEu4ME/i8daKr
c94kyCd8+2dA66lAy9WALToJ/Pd94hbRekvXu6lwb8UklASuKTlA6/GF0UL/
svWT8LTYaV8Vh8Aji7tDc7ZPwmI2r5Q+redA29Cii0aTsMS167FYN4FbZ5au
Szo6CYYXas2PdhJwuxgT2uYwCV4nNK2j/hI46/bM1shzEt4urjjZ0kLgpM+q
ioCASbjkUH2M00TA0i9l06fwSQiSnkjrbiBwICx7gXrqJFDht/Zn0n5cnfrp
pUTdJCyyPRPqR/tZIWsvU79jEh6VJ2kvpf2+NO/rdd+BSQgXLDOOoOfBguLf
BybmT8HIi3t+p4oJdDb85f7ZOAXqe3Nd9r2l56kg/4bYwCm41OrzSjGOjndT
qcjnqCkotobOs7H0vDjuxx1JmALDnZ3fn9HzTSBb6KUuNQUNIZ9LG0MIXLaU
kJ8hUyDyhfJz8iKwK2mlsKXBNEyIC1/TOEJA7ndP322rafgxY7z4qDmB8dnk
z5n202CR4HHtkhGB5EP/3VrsNQ23tMiwzT5aD5ObZ/IypmGOoHueoxo9v3T2
9y4Vm4EkxVVqKxYQyL8oWLabPQPDutsG1/LS8z26IsFx7QwU+b18x57mwr5+
Q+uyXTNguzPq7k/ChYxwy9qrTjPwwNXc+WgVF7w6zpZUV81A277oV/KPuaDg
ExwfGjkLpqoXZU8u50Jnt9q9gaezoNaun07J0efhwTo33fRZYOb/EBOQ4IKa
9HKLeSWzcMZWx/rKfC7oZLwVcRqehZC1D10jOjlwtrnD1ejgP1g9x3Lngmcc
sIyVS77Dy4PXflnz5YtxYLvBQNymBTxY6lLTtnkxB9h8RZF/BXnQMekbK3EO
B/7a29/esZQHB/sDPhzm9sE5tSzrCRUeLBRgKTNK+sDzy96l9lY8eEdKXLLU
qQ8SJi/f0nlD75ePibhR2gsuVMemC+958F/Acplt+b2g62PWHV7Egw7mbzZy
0nphWHDrgc7vPFhVuUxLJrwXtOTnMm518+DtpofROSd7oVH7Xkyh1Bys+ryq
rXW6B5aEpmRtd52DZQ/27dKX74GbKh2tG7V4MagyfbvB1i4Yf1NTDTq8mFBb
8cZzbRc4aJV/2afHi04+wnZPZbpAzzg955gFLxKHdX4fpjthyXUXv4CLvHjW
XKveKL8TEoqF1rfH8aKhwI4vIxqdUGq1yfP+3LnYGN0hfHhlBwgE+LIGi+bi
6dG5o/UtbdBtE2L2at08FGjwjAuybASR/GObm7L4sW7Z8y9CspVwNyhsibDC
AlQIKQ3Z0kVBht9MpbDvQtRMdHU/7ZVIyfOu2uwusBi1s4e1zlh9ozpG30b1
OwvgM+Pvq5e211Ijp5hPv/8TxCafh96P9rZSZn65p6rnCeEejT4La6tWKi/5
6JrGxUJ4beORYinHVspjICmjV0IIxwu71p6JaKUEru8q4FcVwlDzXJ7gjlZK
IdCpcesxIVx7W0nyp0cbpZ9VLZn4QQhz1y0bHEpup5J5ou96egrjmzy7aeuW
DoqvYIM5+7Yw3kzxqhEb6KAsPcuVqABhLDnTdfwtTyclyDv1djpcGCMkXlt1
sDqpc3Mteq6kCmO/sotCplUnpcIvqX2ujua/o1vkqzup2nn7PFKkRLBbg7yW
Luii+DvEO27IiiCn9VuWUUUXtb64Zf8BtgjWrCUXPRu6KL9b1yR6l4lgYfbU
kpyJLkpzfmLqyv9EMF+paYv/f91U1IIFDfHaIrjwV8ZEY2w3Zbm4eHPUZREc
k6m7N3O+h/K83HIj4YoISrQmVWS49lAJDdNUhosIFof8SzLz76FI2oY95R4i
+O/iLbZzQg/lZfTk0HSACM6eOSU7VtdDPY+5cfrIMxH8q/w2YdGuXmpQZUOM
QpUI3lGQq925oI+SiNRrVq4VQb1FX7bOMvuorbwOilvqRfCxroThC1YfdfPX
40TDVhFsOXf1Rrl6HyV5TSjHhyuCF8Ol5uue7KO2fez+1sEviqN76nBTfh/l
a/SYJ2mTKC49PtfuxlEO9SIgS9tbUxTd7MO+3bDjUCVFpYGHt4lihQrL+Jwj
h+JXG5AR2CmKbavnpCt5cyhvca3NZ/VEsSp+E7vxGYdyq2pzVLGh14PKZTy6
OFSs0Pib+XaiGCx0+nJwP4d6t0eAp9lBFHl/rHl+b5xDTedsDAy+IIrPXnfc
tV3Apa6F33w5cJ2Oh6+k33wFl7pstqItM0QUqxViE09Yc6kHwVtWB4SK4uNS
7UZ3ey6VWXrQ8WSEKOa2dqQHXOBSgxpX/4nFiuJMRJn8VTcudX5pmbRzoiga
h63/HhrJpRz+OBhpfBBFx82f7Lu/cKk7DPeHIoWi2BTObRWs5FIv9t1v7fok
ioFqiUUKtVyqM+/thchyUTQTD8iW/culTj4UuDtZJYpX+WvGTae51FHL1E/5
HFE0V+Fxq1tBKGdZRs+PflHsqkppuLiOUIGNTkKdQ6K48Lxa7th6Qr0/ts1U
dFIUv4kXVJVtI5SczZcuG34G3juVeyjoEKHUl6sKXl/IQMPvNZtCTAml13n/
v2ABBqZPfHX3siSUm/1hlzwGAy3U76xdY0uoxrM9i4VZDOwtqE+MvkqoUWU9
VSUFBvLtHDVe5Eooof5XRpuXMbDpy1M9G09Cbb94LebEGgYGWl+SbrtDqFjn
BSpvNjHQetHyhplIQuVsOmP4VZOBa+51P/8dQ6hv4xVXWrcx8INyaVLUE0LN
uoR/ENjFwHVWHOO+F4Sycl9+6Lg+Ay8f6RxLySHUZfRzdjZk4JPTuw+SXEIF
zOFG+ZswsFhbqEL2HaHyvbPbsi0Z+DrbErUKCSXju8tpkT0DPX0/vX7xjVAb
976IZJ1h0POYj234g1AHFgm833iegXKtn+N6Kgl1I6CS/6gTAzV7vg401xCq
Ptg6ItOTgV4t5nd7Wgg1bFCcX+pD59+56slMG6EEmKtbGm4zUDzRoWjmL6G2
hg6sWhDIwCHeOxs/dRPKyMRYT/YeA8UEVroH9BLqjETuxfUPGEhl5/1CDqGi
Iz3eWkYxUOlJbvSFfkJlWbQ3OcYwMMVmh2DfAKG+SOvw3X7MQLcfQz5GQ4Rq
r09aGR3PQNHvk7wvhwk1HSOs+yqBgb/u+d/qGyGU2NFLjsWJDHwc0CEkM0ao
tezq0LpkBq6+YfpQY5xQh+NiG+dlMlDet/WdxiShPn76+FQgh4Hu/103l5wi
1OruDgdmLp2P2PaEvzTfE1j8n1Q+A3teZMc/nibUuIrKGJtioHm7s8HeGUId
NTR8t+IjA3XU5dOaaC52vuKt/ImBtn5H8k/MEko56uFetVIGmuq0Xf1Nc+g7
SnhrOQPbDM+1b/xHx9/c9lvrGwMlBctmPWk+ybcgeu8PBp7RLynJp7l8xVpr
/V8M/O2sDX9pXr9ff6VpNQPrjdfbTNEcee4y1+oPA5Pg+mb6eZziCYnIOtlA
13suO7+fZrvsfJfTzQwM6V3JqaC5oqYZL7YxcHfBiy/RNKtP882/1sHAjtJ8
C1OaY1mrvrp30/opDAj/R8c7b6fu/Vt9DDxH9nmH0nzG1tH8LmEgk3+j3FKa
K++Esh4MMrB9W5CdH52/Zkru36gRBi7fm2rdTdcr7ntD0pNxBk4bcwTUaV44
POfiiykGKgtlnrpA1/eCxHKNtFkG9odduBRB96NGc99s9hwmxgY/UU2dIBQc
OVeUz8dE1yVfHr2i+5fgGeJXOJ+Jtu89CuLo/go+y9H/vIiJVyIswjxHaX+U
/lnyQ5CJb5X/yenRetgprBjfyGSilcQlvfRBQr1cr23/dwkTx+sKRnfT+mKY
nFbpW8rEY/jHuIwQqjk68+0Ei4lOo7VbIvsIpf2h2pNHkYndVx8U/e0hVGrb
lPb85UxMnXo/n03r23X1rl9ia5lY7uxaYEXrv13XLkpahYnvdTU0j9P+OOAY
cExhPRN5WtIdD9H+kXrzq09Fg4l7Bh/Kz9YT6vVum3n7dzHxT1znCxfaf3L2
d8oNtJmYyPit2fedULcCUu6Z7WOi9zLRsP20f40qR2Rt9Zko2O6dWllKqIFj
t9Q9LZn4Q4z3wULa/2Y+L6dvH2ViWXdZdDc9Hz48//Yx0JqON0jgxmt6fgRy
lxyMtmNi09Ijn2TSCbXmxvNTry8zMcFj8o1gHD1PzhX953eFia+k+Z5FxxKK
e6xlytKFiQZ2Ct+lHxIqY7d0MK8HE/drPO7puU/3Wzjoja4/E0OKz5744kOo
fXHOC9ufMJFkOYjFniBU8oP7lTlPmbig0+jXf0fpeXk7PebOcybqmPUNZlsQ
6ufpnv9UUph4xELKOMiAUOZqRyxc3jAxWamHc2s7rd/S3UkiFUwU+RAQ6C9O
qM951k5tP5j4QczKZLkI7e8Ud8j5xUSvC1ufvlpEqP57uZWH/zBR0k64IfIf
l7pyeN10wl8mZuXMF33VxaVuccV0t00zccWM5+KZ11zqmVg7136VGJ6XFFwu
v59L8QTrh11bK4bi+f8ObdzJpSwWv9t2R0UMtx9IL1bbwqWEecMCXqiJoVKf
cOjcNfR5SrRXd+4QQ2njc4blC7mU7uckm5MWYngvOv2ZcBGHGnG/VH/EXwwF
vUvWB6/hUPpTTd7nAsWwVE1Q1FmeQ710PrDG7Z4YVvB9bNonwaGOnl3mEhMu
htZGxrYFvByqzKJaoj5eDNt2mxa01vRRMWpbDM3zxdDk5oTktGcftbuX97Mh
RwybT5s/zSnppaLU7JxU+sXQZu2Qnkl+L9Xv/pW9eEgMDZz9v3em0+tiEVc+
jovh4a0SF5ojeynutnXL/uMTx40bvnxaebqXigg29RCSFsfqRTkC0ot7qR61
ZPUyHXFM89S8+Qp7qGAP4/jtT8WxYZ1IqaRPF7Vx3fX+xc/Fceces/cvnbqo
2trH22oTxXG3mlyW6qkuSmFDX/WlNHGcdr6fJ7mvi8r66yWQmCeOqb0uU+bC
XVTNvnQn5g9x9EwQjn8e3kmxxBfrdM2I4xij4GT8ow4qNfFD3z3TJWgXq/Pp
a2A7NSgi5CcjJYGuIkclVWSbqBb1oGUvKiSwibtoHAp/USNRg2KnH0ii+5jZ
9Zj4Aqoh5NzlMOOleP15vWXR50Q4v1fu58eFUnjDPXd7Ue4XWLE93Xv5Vync
bmLAVOXWgt+A0wZ/b2kcEnmxP3CgBZ47jJwyuSWNBoUVNov5WqGo7XK0/B1p
nJ8gk+O+pBVmf1+a9yZQGu2/rvitu6UVHPMcq9sjpfHIYV6Gu08rmHmfvb49
XRqL+KTerRNvg2XiNoUD9dIYZRvl7KbSDh80jAzN1GUwO/txkeieDqjSVLQ5
tlkGD4o0L3Yy7YDerYPOdltlkPfVmGu5XQcs2REcdVVLBtszW/IM/DvgzN4v
LRF6MjgUEOP1saIDJCx2Xai1lcEwszV5a0064dz1jXctwmXw46ELDc1mXeDj
OveRdZQMJoU+Kw6z64JI95/pDjEy+CO8+OX2q11Q5H3hl0u8DGqk1MHJ8C6Q
CkiWfphGr0veip/3uws+RSu9rCuRwfwbEBOp2w0y78VKLMdlsCh59PznDT2w
Nqi+XnVKBv07ClYUYA9sPfZ0kG9WBn1ypKiXuj1gybtRLmWuLL6zeHHR5FQP
xOwxdJoRksVNVxZrCkf1gFzFPcXYZbLYOHKumGemB9jNQh5Nh2RR3+nu0tw3
vaD6qio001gWlf78LPhX2AvoFZt020wWBTzn+WpU9MIxJeVqlSOyyGgsMfX4
2wtP7HSVPexlcWnZYXs70T5QGPCvZ3vIYr9+YHCobR8o8i7cbJ0iSz8PHEbg
58BaS/baS+my2Hztrpi/CAc25mxi+WTKYo910q9PUhzY42A7LyFXFhPmveRZ
oMIBu5+FP7o/yWLmjcbj7004kBrn5uDYSMcfnryFG8eB19OhVl4tshggfpK5
PJkDH0xS9O+3y2KNQ8T1A9kc+LGoXj27RxZP7+DpOlnCgeGLm+dOjMqi07bS
6MIeDmzeOfzQQ1gO06B7bIMyF7RiFgfdY8jhrqFCu0PqXNg3puAVJ06vx/dI
Ht3OBcskA7siaTlcMqaptFOPC27MtI0LVsrhluSFNmpnubR+7b8GoRwWH/oT
9/45F75u8/zweKccivCVdr5P5UJVeETmqz1yqFmxfVlKNhc695dEVh6QwzOy
vtcMC7mwKEvJVsKcvv83OcmSBi4c9GmajXWUw56G/l97hAkcSiEj1y/LYadh
Z1eBGAGTqn99ZlfkMC5qs8g6KQKWK9l1DFc5/EEa71YqEXD4cuz1LV85XHH/
0sSxzQR8xFrPn3skh+/8a/SuHyXgu23Qdn+cHJZyDliNniDgb8t7ZOUzOXRz
8zU5bkcg5I3CgdaXcvg78iDPfEcCjyxPrDTJkUP3pKKhYE8CeU/bm7d9lUPD
oFi/mEcE3n8drpb6LoeqGuPaS+IJFIzyVYz9lEOub0GFWwKBUp1l717VyKGD
dtomVgqB3302kcva5XBThqxmTC6BGnHnYN5O+npjzdIP8gnUb791u6lbDuee
4HvrQhFoDU5wiiRyyF7itUbiE4H+jZ0GglNymPOoNCWggsCw1ZhOz4wcWnl+
PDTnJ4GxW/OxhIeFKaoKL21+EZitWaHsyc/ClpMbT8/UEJjDq7HsyEIWSvoE
/FStI8C3RkdmiwALfyeEdho2EFjsardoRJSF7xStl9i3EBBKuDrnpxgL184K
Kh9uI8Co8B1PlWBhXsMWsvUvAUn5xA47WRZO5e9zqOgisPxT98f6lfR++92r
VQmBq/p5h5PWsJBzqts+op9AeZ3f8DVlFsrxdHP7BwhcGFyzXGIjCyckLIsv
DhModJ1+/1edhZ1e9yWiRwgsWfjVNGszC8eOpCZljxJ4yzp3xwBY2ONxOip3
nI4vabsCW4uFRzOFh+MnCBxTF37L3cXCMNWHgW6TBDILmgzfabNwj0Gc/d4p
Avy66X3++1joqVLgwzdNwKzG46aFLgv/JjxsSqM56YSB3Cp9Fn4zari2f4au
H1f+9dghFl6N2GxYTbO+y+DBYmO6HvdPnzacJRA/r7DrgRkLLVeqf6RoHg2+
73niMAs/zZwwlflHQEfmpNT6Iyy8c71ktT3ND59vzOQ5zsKdXzS3JtDMXT/v
QMUJFko3PPKvpBnf/26PsWVhlVWz5ADN9/cmuJ6xZ2HTB07bLM0dv5yXbDnD
QoMtBX3/f3+ucUw7beF5Fo4UHd7QS7N/r4ROjSMLdSSLX5fR3Ojc1ZxwmYWX
MkRcImhW5c295nSFhVqVhi708zl4373D2OVC39817Q0/zVWSFkkMV7pfl/er
JdD5rHy6eleLOwtltEz71Wi+rjJVn+bFQjvlRT3ZdD2+5ZU7ud2k490dr7Cc
ZvaeaCFdXxYGmdhH3aLreenHmefS/izM7X9pUE3Xv9hyG/bcZaG57Xsd+v8R
SHYJ1r4JZiGrfI7HXrpfpy81Ot6+z0IY/jPmQPdTxM89XimShWmpAkluYwRO
iOtvHXrIQrF0084LtB5yHrN/F8Sy8LaxrK0hrZfDrwv4jz5lYVzGoXXdgwRS
tUIerXvOwv0Ng87RtN54vllrTCey8Ny9c/OQ1mNC+1yHyDR6f3bqkCmHwPj5
X7x2GSwUCGkx+tJLYP/U04fq2Sw8//3LjGoP7T/RPV8r81i4xXl2VXkHgZ0x
S2zj3rHQSWMglYf2Q9jKztkLH1h4RHTEbTntly3gqypUzMIbvxvm7mwiEPjZ
rKy+lIUR08l5m2m/NRuvsk4qZ+GOV8c/sOv+/z7+832dHyzUg2f5VBWB75EC
Y171LDxcfSp8x1cC0qlrzwY2sZBv2sXG+zMB248H2iJbWbjNZboko4TATE9A
RXoXCyUO1en/KSCweqvgi8ZhFiaYG8YdyCbgrL9OrmeMha5XandOvaLn1Und
ByOTLCzM4/MNTyWQXLwHb/GwES6o8kQ+J6BFbq2N4Wfjt3VXu6kIAnYTYZ0K
C9iY43u1tu4Bgbtzn8e9WMjGym8zN/4G0/NMokQyS4CNhxO+dxb4EjiP8+eV
M9g4ffZ60KMrBKLv3W4Yl2PjfYXXx/oNCHx8GB7hxmZjXvvLzK4DBDqfPTfk
U2Cjemtl2zdtAuvzSsqEl7Hx8/W4zpPbCJS1zs9ZvoaNPca+P1+voP22wTfQ
aBMb/yX78E6Pc0Fme8TePxpszOcci6sc5MIOnRd8xzTZ2Gbw1DCyjwsBlqUu
p7exMWO4dpzbxAXFmwtOee1k45G48OzCT1zQr/KF9INslPOZb7okkAtD2qHT
0gZsvFq5xlf3NhfCcp/k3j7ExmHHVn0nDy7UR+dtOGpM51velBN2kQt2J/pW
CB1m4wx5t0nehAse/QdFztiy8ULlzS1mUlxIWyTRssKVjSv81xjah3Pg0A3F
2PtubDT1C3qXF0if1xyVw//c6d+/mtw6c5MDmj90fld5sdFH+n6A8WUOFIe7
lN30ZaOuz6o+Q30ONCo1vmq7z8bQhBPp/vM4IATPvB69ZOOalDjuAps+WOdk
nroqmY0qKX/1npr3wYEkwT+ZKWxE89gWZb0+8Jdw/q80nY1z5Z7lim7qgwX9
e5r7c9gorRQ/LLSgD3ifdG3TKmRjys5HbzkJvTDKu3aivY6NBnVP35yv6YHG
4ozzqwXl8aWFmeJ2gW5Ypqx9JkVIHq/VPgpZNdMFZ0Lr7FRF5DHH9uBbfm4X
TJ7gs1ZnyuM505uHwyq6QHyOiZHWUnkULbMvXxzSBQe2TGhYLJPH9A1nlEzF
uuBtGvD6bZPH2vSz6mlCnRAR8eVB91l5tF37p+VafTu82MuzeVWpPHon1jaf
1WmGz0uX3eZbrYDBtQO3cz1/g1bZCaNjNxXw4rW7RfXcInj6MdW8v1EBHX3n
9ehV3KQk63oWyKAiFkdb9cxeL6Naf+Km0ihF/HrAnQoJr6ZiV+5fYhWtiJVb
3GrDiqspczfjkYEYRVz1zV08YKSa+r7KIVP6iSKmWrLd9hrWUO897qucf66I
bttnGwSEaqmHyh0rlmQpYo01yzza4w9l5OcvefKrIo7eWG8qZt5AiTSHjo1/
U0ST5L8BfLcaqHK1x1V3vyviM1nvA60ZDZRWS9aD15WKKNJ+cMJGoJFS1WgU
WfxHEfcTn0m/942UQIfqwowORcz+4J0QKdxMlW7Z0rWnSxG1rhj4XVnWTHnf
211S162Ii+TOG+/f0kxNbrW4OY+jiOs1F5z+ZdtMdd33nmM+pIhxbZISp981
U0+77zZzhhVxwPLJm9GfzdRRiKC8RhXxwZPpX1e6mqmqnmTX5AlFtI6x07Fg
tlAh+Npyx5Qi7jvzwuftyhZKL6xgS9W0Iv7Ys5Sfsb2FWtRXLnV6VhFlz52g
rAxbqE87qib+/VPEjS1q8bF2LdT/AME2tZ8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{2., 0},
  PlotRange->{{1, 10}, {-0.9999996302303676, 0.9999996313144046}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.577654577748363*^9, 3.577654599489204*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Plot", " ", "2", " ", "functions", " ", "side", " ", "by", " ", "side"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{"Cos", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5776546130069103`*^9, 3.577654706568716*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
nYaaRv9tV+dwicmHix7Nb6KheQFv2kyYJD7cK7Rkj9LQINP/ntp6kkg0rFjk
M0Hp0xVcq7SZJCIlqqs5UzTcrvstYA5J4lbg352fBOgowu3Q8jQiCaPwSS0z
KTrqV97NdbEiCTDn78lh0PGFXPBw5nmSWKMk8kJNjo5/DQMvddqRhNxzGblB
ZTquN3aHmf9IojVh1Zz/cmp//IYv8n4kUXthY9aQFh0vLw1vS3hAEqXL9S8f
W0NHYemijaxHJPE6bW+Xug4dH/W/PFn2hCTcMqy/5+2ko9zGVUfEU0jC1t3e
V9OQjiqSrKetaSRhudll28N9dJQKqx6PfU8S2wjPDIvDdFxX9KW7OZskFpY8
jR4/TceEu99stpWSBL/vi2OW56jnNT9UPFNBEiOGyYwiGzqePrSuyraSJBoq
M3yCHemoWmevt6mGJL4GftnKc6ZjQFgVZ6qOJL6YFE2d/I+OQv/SIxIbSCKu
rtpx5XU6Rt3Z35DTTBJh4Q1LQ27R8b/soxcW/yMJP/OWtsk71H03+vW7tJGE
YzPnSKkfHW+I5Rf96CIJq+cjNO0HdHQNjlnU1EMSh62mKkKD6Piy2Pzojz6S
0O0UwTPhdFwlWxh+mSSJlYmSk2VP6CjTVP1YdZAk2Bdl01dF03FDvJtH9hBJ
0FcoO4TF0tHc68HuzSMkIcRV05yNp+NCnOXFjZLERNqy1rNJdLQ+lP9wfIwk
ei+tflqRQsccbofI2gmS+LN2k9maN3Q8N+F19giPJH6M6ktFvKfjgQVfY85O
kkRBxo7yuY90fO45QZhPkcRHdyMv62w6bj199IvONOWvzYf0v32m43Enw6f8
MyTxZObYxNo8OlYv1z/2juIHxKl3kYV0TCp7P7J3lvKb53k7/lI6WuroOVRS
fHmbg7pNBR23LHYv0pkjCWsh15bKSjrGcZQmAyhWYJX9mqqi4+8m/FhCceUm
5e+atXTM9Viyi0PxbZNLxab1dKxnvU+ZpXiDXdHn2410lP7e3DlFce9d+Q9p
zXRs2pM82k5xVLR9StM/OooKL27IotgkK++FaAcdO7TPB12lWPinzJMN3ZS/
kp8wNSjO7r8QfKaPjo4Lxm4RVL0Owl98A7l0FEzKyNxGsSqb7vl5kI6lnlrF
76n71ulYu/WO0NHD5EOSJMV+h7Id5Sbo6OD//swRSi99+4Xnt09ReTF5NuJH
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
r7gSFLohvF0r97i6CoblrjDJFu2G9tcijf0aKsgL8PmozusCD8yRklyugjFJ
Ned+/uqClHNqHodWq6CEWsv16yFdIPZm0KRpiwrasZ4nKYt3Qcn2B3xcMxVk
LTWzred0wFaHkuM0XxUU3/B4RYJ/G0QrWS3+OqqCvmNXC7bea4TFBQmP9x9X
xZS3P/WndL5D4Mr8ZdVfVFE79qOffkIyWA/PqypbpoZnp+bfvr6lkLB6O8T2
faiGqpxUTsSuOsLu9qFpwyA1lLsib7jbo45wPZT+S+IRxXZ5hh1v6oh7o64P
Ah+rodnrk4975X8RqTq8qbBnaiiwo79bue8Xwcubq3v5Sg2fqYjqzvNrIAKr
JQIKS9TQcPalX2ZmExH5wt7Gu0wNhY4M/+T0NhEvXCq37a5QQ2b0vnIJ5T/E
R9nAyYpKNaxRcVOb7/mHaDJn2PysVUM92v2DPbuaCY02+W2tbWq4/KiTnEHV
X2JV+lVmXAf1/GMvFPj4Wwjdu428c11qGHs3p9JEvoUw0nj2pqdXDfnKrRur
97QQzrZs5uCgGg53brq2ObmF8NDz5L0bVkNaBJmwPr+FuLugtcZllNKDSGlX
/d1ChKe98J+YUMPyRVbb60T/EbG35p3PnlRD3n4fg6cq/4hXxucMPKbVMENh
wXxTnX9Eumqxsv4sdf78i5t8xv+IL8PqvLk5Nep7c15klM0/4v8AH8vZtQ==

     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
HsD/A1QMfro=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 10}, {-0.9999997966795732, 0.9999999999999791}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.577654684944821*^9, 3.577654707553186*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"SYMBOLIC", " ", "COMPUTATION"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "Numeric", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"3", "+", "62", "-", "1"}]}]], "Input",
 CellChangeTimes->{{3.5776547965552263`*^9, 3.5776548207912903`*^9}}],

Cell[BoxData["64"], "Output",
 CellChangeTimes->{3.5776548233457127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Symbolic", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"3", " ", "x"}], "-", "x", "+", "2"}]}]], "Input",
 CellChangeTimes->{{3.577654833796273*^9, 3.577654837378027*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", 
  RowBox[{"2", " ", "x"}]}]], "Output",
 CellChangeTimes->{3.577654837796664*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Mathematica", " ", "rearranges", " ", "and", " ", "combines", " ", 
    "terms", " ", "using", " ", "the", " ", "standard", " ", "rules", " ", 
    "of", " ", 
    RowBox[{"algebra", "."}]}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5776548772235403`*^9, 3.5776548806568832`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", "y"}], "+", 
  RowBox[{"2", " ", 
   RowBox[{"x", "^", "2"}], " ", "y"}], "+", 
  RowBox[{
   RowBox[{"y", "^", "2"}], " ", 
   RowBox[{"x", "^", "2"}]}], "-", 
  RowBox[{"2", " ", "y", " ", "x"}]}]], "Input",
 CellChangeTimes->{{3.5776548871238728`*^9, 3.577654887126822*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "x"}], " ", "y"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"], " ", "y"}], "+", 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "2"]}]}]], "Output",
 CellChangeTimes->{3.577654888725775*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "function", " ", "Expand", " ", "multiplies", " ", "out", " ", 
    "products", " ", "and", " ", 
    RowBox[{"powers", "."}]}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5776549097643213`*^9, 3.5776549120140953`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "+", 
     RowBox[{"2", " ", "y"}], "+", "1"}], ")"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "2"}], ")"}], "^", "2"}]}], ";"}], "\n", 
 RowBox[{"Expand", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.5776549207156553`*^9, 3.5776549207187977`*^9}}],

Cell[BoxData[
 RowBox[{"4", "-", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  SuperscriptBox["x", "3"], "+", 
  RowBox[{"8", " ", "y"}], "-", 
  RowBox[{"8", " ", "x", " ", "y"}], "+", 
  RowBox[{"2", " ", 
   SuperscriptBox["x", "2"], " ", "y"}]}]], "Output",
 CellChangeTimes->{3.577654922239217*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Factor", " ", "does", " ", "essentially", " ", "the", " ", "inverse", " ",
     "of", " ", 
    RowBox[{"Expand", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Factor", "[", "%", "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.577654941194409*^9, 3.577654968739789*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "x"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", "x", "+", 
    RowBox[{"2", " ", "y"}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.577654969774458*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Mathematica", " ", "knows", " ", "no", " ", "rules", " ", "for", " ", 
     "this", " ", "expression"}], ",", 
    RowBox[{
    "so", " ", "it", " ", "leaves", " ", "the", " ", "expression", " ", "in", 
     " ", "the", " ", "original", " ", "form", " ", "you", " ", 
     RowBox[{"gave", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Log", "[", 
   RowBox[{"1", "+", 
    RowBox[{"Cos", "[", "x", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5776550382152443`*^9, 3.5776550522253428`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"1", "+", 
   RowBox[{"Cos", "[", "x", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.577655054184339*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "uses", " ", "the", " ", "transformation", " ", "rule", " ", 
    "in", " ", "the", " ", 
    RowBox[{"expression", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{"2", " ", "x"}]}], "/.", 
   RowBox[{"x", "\[Rule]", "3"}]}]}]], "Input",
 CellChangeTimes->{{3.577655152551174*^9, 3.577655178433455*^9}}],

Cell[BoxData["7"], "Output",
 CellChangeTimes->{3.57765518167309*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"expr", "/.", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
     "value", " ", "replace", " ", "x", " ", "by", " ", "value", " ", "in", 
      " ", "the", " ", "expression", " ", "expr"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"expr", "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[Rule]", "xval"}], ",", 
       RowBox[{"y", "\[Rule]", "yval"}]}], "}"}], " ", "perform", " ", 
     "several", " ", "replacements"}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.57765521858191*^9, 3.5776552365454407`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "assigns", " ", "a", " ", "value", " ", "to", " ", "the", " ", 
    RowBox[{"symbol", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"t", "=", 
    RowBox[{"1", "+", 
     RowBox[{"x", "^", "2"}]}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5776553429126167`*^9, 3.577655354337726*^9}, 
   3.577655384743778*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.5776553551414013`*^9, 3.577655385605811*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "finds", " ", "the", " ", "value", " ", "of"}], ",", 
    
    RowBox[{"and", " ", "then", " ", "replaces", " ", "by", " ", "in", " ", 
     RowBox[{"it", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{"x", "\[Rule]", "2"}]}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.577655396045558*^9, 3.5776554100482273`*^9}}],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{3.5776554124214077`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "finds", " ", "the", " ", "value", " ", "of", " ", "for", " ",
     "a", " ", "different", " ", "value", " ", 
    RowBox[{"of", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"t", "/.", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"5", " ", "a"}]}]}]}]], "Input",
 CellChangeTimes->{{3.577655423533388*^9, 3.5776554485503263`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"25", " ", 
   SuperscriptBox["a", "2"]}]}]], "Output",
 CellChangeTimes->{3.5776554496652*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "finds", " ", "the", " ", "value", " ", "of", " ", "when", 
     " ", "is", " ", "replaced", " ", "by", " ", "Pi"}], ",", 
    RowBox[{
    "and", " ", "then", " ", "evaluates", " ", "the", " ", "result", " ", 
     RowBox[{"numerically", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"t", "/.", 
    RowBox[{"x", "\[Rule]", "Pi"}]}], "//", "N"}]}]], "Input",
 CellChangeTimes->{{3.5776554585226707`*^9, 3.577655471774391*^9}}],

Cell[BoxData["10.869604401089358`"], "Output",
 CellChangeTimes->{3.57765547238335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"SIMPLIFYING", " ", "ALGEBRAIC", " ", "FUNCTIONS"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "4"}], "-", "1"}], ")"}]}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.577655570988812*^9, 3.5776555902477818`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"ArcTan", "[", "x", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.577655591698661*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Differentiating", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"D", "[", 
   RowBox[{"%", ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577655605997613*^9, 3.577655612113907*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "x"}], ")"}]}]]}], "-", 
  FractionBox["1", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}]}]], "-", 
  FractionBox["1", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      SuperscriptBox["x", "2"]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.5776556137062387`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Simplify", " ", "that", " ", "shit"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Simplify", "[", "%", "]"}]}]], "Input",
 CellChangeTimes->{{3.5776556353065434`*^9, 3.577655651999462*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["x", "4"]}]]], "Input",
 CellChangeTimes->{3.577655798363902*^9}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["x", "4"]}]]], "Output",
 CellChangeTimes->{3.577655799676083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "CALCULUS", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Partial", " ", "deriv"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{"f", ",", "x"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Deriv", " ", "of", " ", "f", " ", 
     RowBox[{"w", "/", "respect"}], " ", "to", " ", "x"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"D", "[", 
    RowBox[{"f", ",", "x", ",", "y", ",", "..."}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Deriv", " ", "of", " ", "f", " ", 
     RowBox[{"w", "/", "respect"}], " ", "to", " ", "x", " ", "then", " ", 
     "y", " ", "etc"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"D", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "n"}], "}"}]}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Nth", " ", "deriv"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.577655810197989*^9, 3.577655832179921*^9}, {
  3.577655884618608*^9, 3.577655922029921*^9}, {3.577655956403385*^9, 
  3.577656016077283*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.577656018984744*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "You", " ", "can", " ", "differentiate", " ", "with", " ", "respect", " ", 
    "to", " ", "any", " ", "expression", " ", "that", " ", "does", " ", "not",
     " ", "involve", " ", "explicit", " ", "mathematical", " ", 
    RowBox[{"operations", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"x", "[", "1", "]"}], "^", "2"}], "+", 
     RowBox[{
      RowBox[{"x", "[", "2", "]"}], "^", "2"}]}], ",", 
    RowBox[{"x", "[", "1", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577656048384756*^9, 3.577656063335411*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", 
  RowBox[{"x", "[", "1", "]"}]}]], "Output",
 CellChangeTimes->{3.577656065205935*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "INTEGRATION", "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.577656197714252*^9, 3.577656203337635*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "4"}], "-", 
      RowBox[{"a", "^", "4"}]}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.577656292610342*^9, 3.577656292613618*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    RowBox[{"ArcTan", "[", 
     FractionBox["x", "a"], "]"}], 
    RowBox[{"2", " ", 
     SuperscriptBox["a", "3"]}]]}], "+", 
  FractionBox[
   RowBox[{"Log", "[", 
    RowBox[{"a", "-", "x"}], "]"}], 
   RowBox[{"4", " ", 
    SuperscriptBox["a", "3"]}]], "-", 
  FractionBox[
   RowBox[{"Log", "[", 
    RowBox[{"a", "+", "x"}], "]"}], 
   RowBox[{"4", " ", 
    SuperscriptBox["a", "3"]}]]}]], "Output",
 CellChangeTimes->{3.577656296827581*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Definite", " ", "Integral"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Integrate", "[", 
   RowBox[{"f", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577656447291402*^9, 3.5776564568676643`*^9}, 
   3.577656493147348*^9}],

Cell[BoxData[
 RowBox[{"f", " ", 
  RowBox[{"(", 
   RowBox[{"xmax", "-", "xmin"}], ")"}]}]], "Output",
 CellChangeTimes->{3.5776564946281757`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     RowBox[{"x", "^", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.577656546825768*^9, 3.577656546828869*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox["\[Pi]"], "2"]], "Output",
 CellChangeTimes->{3.5776565485378647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Indefinite", " ", "Integrals"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"x", "^", "2"}], ",", "x"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.577656657117332*^9, 3.577656679398665*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", "3"], "3"]], "Output",
 CellChangeTimes->{3.5776566805946493`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "-", "1"}], ")"}]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.577656735094035*^9, 3.577656735098817*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", "x"}], "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "+", "x"}], "]"}]}]}]], "Output",
 CellChangeTimes->{3.577656738585017*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\n", 
  RowBox[{"Simplify", "[", 
   RowBox[{"D", "[", 
    RowBox[{"%", ",", "x"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5776567499904757`*^9, 3.577656767802055*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["x", "2"]}]]], "Output",
 CellChangeTimes->{3.577656769947072*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Differential", " ", "Equations"}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "x", "]"}], "+", 
      RowBox[{"y", "[", "x", "]"}]}], "\[Equal]", "1"}], ",", 
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577656853259068*^9, 3.577656867813764*^9}, {
  3.577656987196225*^9, 3.5776569887041597`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "\[Rule]", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.577656991269665*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Something", " ", "tells", " ", "me", " ", "that", " ", "we", " ", 
     RowBox[{"won", "'"}], "t", " ", "use", " ", "differential", " ", 
     "equations", " ", "in", " ", "202"}], "..."}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "PLOTTING", "*)"}]}]], "Input",
 CellChangeTimes->{{3.577657117404523*^9, 3.5776571562966337`*^9}, {
  3.577657250987936*^9, 3.577657257726416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Plot", " ", "several", " ", 
    RowBox[{"f", "'"}], "ns"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{"Sqrt", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5776573108212633`*^9, 3.577657319069132*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJxFxXsw0wEcAPDZVjaltjXTbocQ3eFOXdfVbhM5IS7Hul5U0w81U9s8riKd
U5qOEkvOs6XOcB3lxEpil9uFk3MRsUSidHnltFvzqv7w/f7xuY8jIRfFkEkk
0uF//k9pter+uid9/9ouP1oE9vfE3mubn3lGD6rk8ARbYmpUpcFD/hlvKlR3
4Q9i1Y4ylRoWXeAOFaqewnnzp+oLVK2wQB9k5ZvYAytSQs7WKz7CF1/E5JCd
R+G+yUP0SmIczvI0khpPTsLx7u33dRVTsDkqrnZYNgcTr4+F5p6bh6N+9el0
txbg2zu1co3SCJN12r0ZKSaY6RbcPVJohgPVvo/nVEuw7WyXf5p2BS5+22RB
iSX5rC20O7C6LdoCdh9ljF9LIsM1VSxJQwIFTv18utddSYXjhfuCH+Svg81q
P+Jn7nq4R1EcefmRJcwPcFoZLqfBHQf5VT6ldLiirog/9sQKtnH2kJ6p3gC/
t6Bd5zZvhBtoiZqeDmvYw4YhJfSb4NkcI3t3/2bYOTPTUy5lwGPhhiHf73jg
RO+fBhkTvpIQI+FM4yGNJUGcSyx4ZkmaSjHi5QPpz2WJW2CzxCsyeRG3W86L
iE9hw98CsjtpVBu4zbXL2z4bl9I0VEc6B9Y+3O7Vlod3C4R6EdMWNklLjkTm
4O2h6qPWnK0wwRdWVubjsdPvfn8qwBXlYj9WEZ5Gv/EltQwvHezgiTR4f/Lx
3CUtHtSUkBxmwMNk1HblMH7CqYDTPIKfz3pZ7zqOZ4STZhan8BbzHUKzgutr
HeoMJC7cRdStMii4obOv9KolbirmDYQy8NWQGhclC19P8U56xcbZcQTTlYvz
HBbEETzcqfdmba4d7pZpu6x3wHcJqoMXHfG/9esb8Q==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1:eJwVknk81Akfx3/jN0ViDaYxs64iKtrttIj6flVybTbaqChMqjGV+3iU3Z42
R0/JupZNitkeRwfCMzxMuTKOshrXiBm5qZQcJcb19Pzxeb1f73/fr886tp/z
aTmCIC583f9JVio2D5pc2bOd0lBfGWYKBm8rLHSSPGCbBzVxKTwbZI+3eHcl
+kHurQ2vdjcWQOEMdKjmh8HcJpNHS6HFMEznzJYkXoYNqRJRV3gJxLIalPMF
V2FjdX7Y4toyyN7onkHkx8CbudOtsmgBdB+IrMlK/B1CdZu79RsrQWakZBRR
kwB06Qurk5IqiNkuDswSJEGZtnHZi9pq4FlxqbN5qUD8LVP5FPoMOjwSN9xJ
zIA54lqmKLwOCnd8bzYozASBjefJYaN6CDNNkobV8GDh4ArbTnE9UOGEAU9w
D84yiuDz2kbQcZwsmc7LgeSIcqfp6BfgfJ7V/WdiAQz6BrtpN74EJTOoTLF5
DPMaB/Pv6YtgoixAtV/4GLL4DU1CLxGUPBXzQ2oKYYJbsM1NIoJ9wsylu4Ji
uB3n0NJQ2wIn2nfGT+aVAsdxjDMZ2gYJU+7FKYmVsCkq8OfmcDHcXJNmWaVc
BZEBEZePPBBDa2GUrolzFVQ7+mWEdIvB7Z37sM7XDsMe8+XXzTvB1211wNT7
alDdyfpgO90Jybs5127RauFHX5WiDpcu6KXolY66NgC0c+yV30pg/V3lNPf0
BrBWcbTcSpMCZ9dcREtfA7jnBA1rmUphKlC0V+DTCBdlfh0ukVKgDv3aHHfp
ObCbRDu8tXrAqE4ybJLRBJyR276x+16DhdBecW+QCCQaJQ93mfcBrT37pWmS
COixAb9/tu2DoQG5P74rFgH3geYh3tE+iCMEuqxpEeS6vqc3hfXBgIWxyURg
C8xyIsyD+H1wrWi1593AVkgiHn3Z9H0/iDOa+LKAdtA5XjG8kTEA/hcdvYr9
X8H+8Cy6W90gXPjv6Tg5/T7oeeJzxrlsBNrf2K3KYQ9BWWEk3//6W7i+ZYYo
OfYGtLL6bRnvxiDAuOGPqqz3oHBl3R2KzTjITp3L7/GdALNUiQbNdALYT10O
xZ+ZgtxQlI/dOAmnJturqq59gt9S+9vM1k5B7NZSv+zoGTj68406lYUpkKsq
NY28OAsm6mb7Dj+fBlUjh+beP2WwoqX7JpX3CWwz9t6bSFyAn1qY9tVen0Hj
Y9OBy6VLMBxdc9XOeAbS6ssppA+B6kGPrM6+mwFLbavltd4UtNN3MdyW+gWM
+2hDvwTLYQphu/m7g7OQl6vG4QeSmNyqNOI2NQsRr0+0GUdTsSnCyCwncw4C
LM0c7iavwAQv6wEvGxnIMvazx+JXYu2pJCvbXhmI/NM8w/6SR+vdHsHW/5wH
cxu9pR6eAvrRE9IPqy9Ao7V5Lqavwoq2+y68zAXIKrxlPvBQERnSb5+M/rAI
a/Q3c0/eX427vK3vhFUtQitF4TfWEyVc1ImNanZeAr5CULaoURnXeyv0i3uX
YPMaGpct/AYfKoVMGXotw8e4GfoOsQoKNQVFamPLoB8Ts8WPS8Mg/qhZ304C
B45LuveO0lA9nrasGEig7XDbHN9XFY/YFk2cLybwH4GnOYwPqii7+v7b6x8J
dCy5bc8IVcMCPbtj9VsoOL7AjSBn1DD2XH3qBy4FeZ1X/uMbpI5vTsX9avRv
Cso4uz3D59VRGrHHNaCfgtqLCW4BF+lYzjOWjLDkcMTmxnMF6hq855fPdnKR
w2eGTaBzYw1uPZ9VPxAvh1yFbOq6VQx8kPlNcF+dHJZmrt/9LIGBo3sY808J
EpstLIXOqhoYok6PMfyBxFnu7cOecRp4Qv3Yw2kfEhsOZRxRZjDRdc+PJbE8
Etnmljk5yUwci/7i2d9Oos+Hvz9LU5h40nb8jLCDRH+ex361W0y8ZJDLvi8m
8fKqq/0Rd5g4y+daBLwiMb2rUdM5m4lZfKdAQkqiONw1fqGUiWnHu2e0Bkm0
Lw8Md5IwUfAvD2/HSRKdfKkN0T1MfBvrYbBtisSjeimMJ71M/LjVUao+TeLZ
62XFhkNMnCxdMO76RGLkcWJ8/j0Tj5jVOp+aJbFCdpOdvcRElYoNlSHLJArz
dQslBAsN5It6XYmvP2QXLtNIFiYizphTqCh53p5+SZ6FZPOFFUtyVJxN0+w8
RGOh5oHtj6JWUnHZMc8gWo2FFSspv5yVp+JKEoIFdBa67Hu9z06BivRzbFVD
FgsL/BuLlRSpqKn7ycNNk4U9RLf7+FfXa4vKj9dmodRhaf7laioaxWgsCnVZ
mJtpmlCoRMVtFvcd5tex8MvBGK0kZSr+D8ZSLLI=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998592131705, 6.283185178951315}}, {{
     0, 6.283185307179586}, {-0.9999998592131705, 6.283185178951315}}],
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.577657320927334*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Log", " ", "scaled", " ", "vert", " ", "axis"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"LogPlot", "[", 
   RowBox[{
    RowBox[{"E", "^", 
     RowBox[{"x", "^", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "5"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577657338574547*^9, 3.5776573513267736`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVzHs0lAkABfDR0HjFmM8oUsIQpUZC36Z8l2ZpQ0diOUQlZaPWoy1a8ghF
RcpjlTBte4rs5pBHxWo2lWejUshu24P1jhkxHiOz0x/3/M49555rGBjmcXAR
jUZzk+erLwVDbBpNRD1K7Fj71UuL/4larCSilmQ/SdJQFVHursI36nJbLGro
q7RFlLCrokBX7hVxXoyrmYhqHosx2Sj3XNP3Lq3uIkqgr2FzSG5DaW3Ivl9F
1J1oK882voi64LymZNBZTKVZxlzOcxBTYa+uciKuTVAWayfZ9oUT1IMPZ+vM
bk9RvVTmSFPvZyqy4ahG8f0ZyiXbbk5kNEUJeBveKY5KKf4xoabpKQk14piW
Ic2XUcpHk6MgmKaKI4bL3/EV4C827A9eOUvVvK+yK6qhI6hKmG5xYo4qadjW
XvdBCXFZhWc7q6VUT6ygopCmjJR5r9R01hfKzLZxe+lhVRTFW/5t7r1AnTvT
3O/3WB2hjnrBB3Jk1Mm2WwvmFprQapqa94yiobPxg9R4golpadh4yDIFjM4e
SlDmsbB7yv8go1EBtTlB8fkCAqkZHVGRkYtw+MQct5LHRmOl70Z3Fh1F0vmw
rFodxPK9Iisf0mFrXhzz7b5lsNMN9D2/XxGj3b5MrkQX4d4fnwwylfBDANn/
U91yxNkMP9P+Uwn1uUbLtNJWIJdPj7/rvxglG9r8Xm4zAOdF5t1uNQac9Lv6
1K6sQl0G91L4HQbst4Y+iD5jiHWjXmpdbspYnnlhKP64EbQ1RcqP55ShUsox
74g3htLD/DLjayoY8IwpFMdxcMS69o2KiypmemTTRVdN8Pt3gfx6iSp+sRL7
Bd0zhWREj9mfq4aVkT8LQ5tXo3q3Mz2bpw7J3qgvOTNmSNieUlTZr46091f2
2umtgdHbHd03UpbANZXHDt6yFnabkrN1rTQQExV7yD7OAv4r22cVOjRwriNS
hyhfB0lL+sfwRE3kpt7Y2anIhesi7mZzFhOB5ue1gjmWUB333aUQyMSzrJ4J
36eWSKrH7Wv3mDB1az16/uQGJHqWeUeoaMHecO6IDscKm591Oans1wL/k+qm
hPdWeMfmJSvXaCG6rX/EoGAjVEy+0XFgsKDYMl/r5W6NMZ3BoS0BLLidHtOz
1rGBT7sBK7KMhRpXhxjeSxuUeeenashYOMb84/KjdFv89eg5fvQi8Nbah3Zn
zyb4TGa4MW4SmOQKuOqGJJ4KHS3DbhHoba2wTeCQsC6RsLqKCUQv742dXE1C
MyCg+2Ypgcuv55++XS/fN6474FQu71XaHne3kLDJb4tOqSNQw+ncFuJDguWo
+hu9g8DFh0U5jEwSCfr1Z0JfEXB4vj05KYvEmCTicMdrAnnZ3ApZLonm0jfr
b3QTIMnq1pkC+Z5dct/xXwKOI7emPpWSGB90bk8cInCKtsKkr5HEngZp+dAw
gXSX64ygVhItBWXZu0YJOO04YN4nJHHTY6mv4TiB0kD+mv9ekwio6+8TTBLY
KlswHu4l0ZZ7tdFMQiBxIJx2ZIDE5oidtzOnCYQkrdIfGybBNq0O2zdHYH0n
qfVZTOI0LcSjSUqAkX59+PgUCVHPChvLLwTSpp3pszPy/6oXS/MWCFSwLfxi
5+X/F1PmZDICCQNuEzIZif8BKggt2Q==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  FrameTicks->{{{{0., 
       FormBox["1", TraditionalForm]}, {4.605170185988092, 
       FormBox["100", TraditionalForm]}, {9.210340371976184, 
       FormBox[
        TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm]}, {13.815510557964274`, 
       FormBox[
        TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm]}, {18.420680743952367`, 
       FormBox[
        TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> SuperscriptBox],
         TraditionalForm]}, {23.025850929940457`, 
       FormBox[
        TemplateBox[{"10", "10"}, "Superscript", SyntaxForm -> 
         SuperscriptBox], TraditionalForm]}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.1354942159291497`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.5263605246161616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.8066624897703196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.02535169073515, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.204692619390966, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.356708826689592, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.48863636973214, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {7.090076835776092, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {7.7406644019172415`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.131530710604252, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.411832675758411, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.630521876723241, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.809862805379057, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.961879012677683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {9.093806555720231, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {11.695247021764184`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {12.345834587905333`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {12.736700896592344`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {13.017002861746503`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {13.235692062711331`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {13.415032991367148`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {13.567049198665774`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {13.698976741708323`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {16.300417207752275`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {16.951004773893423`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {17.341871082580436`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {17.622173047734595`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {17.840862248699423`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {18.02020317735524, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {18.172219384653864`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {18.304146927696415`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {20.905587393740365`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {21.556174959881517`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {21.947041268568526`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {22.227343233722685`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {22.446032434687513`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {22.625373363343332`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {22.777389570641958`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {22.909317113684505`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}, {{0., 
       FormBox["\"\"", TraditionalForm]}, {4.605170185988092, 
       FormBox["\"\"", TraditionalForm]}, {9.210340371976184, 
       FormBox["\"\"", TraditionalForm]}, {13.815510557964274`, 
       FormBox["\"\"", TraditionalForm]}, {18.420680743952367`, 
       FormBox["\"\"", TraditionalForm]}, {23.025850929940457`, 
       FormBox["\"\"", TraditionalForm]}, {2.4849066497880004`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.1354942159291497`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.5263605246161616`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {3.8066624897703196`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.02535169073515, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.204692619390966, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.356708826689592, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {4.48863636973214, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {7.090076835776092, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {7.7406644019172415`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.131530710604252, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.411832675758411, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.630521876723241, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.809862805379057, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {8.961879012677683, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {9.093806555720231, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {11.695247021764184`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {12.345834587905333`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {12.736700896592344`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {13.017002861746503`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {13.235692062711331`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {13.415032991367148`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {13.567049198665774`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {13.698976741708323`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {16.300417207752275`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {16.951004773893423`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {17.341871082580436`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {17.622173047734595`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {17.840862248699423`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {18.02020317735524, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {18.172219384653864`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {18.304146927696415`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {20.905587393740365`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {21.556174959881517`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {21.947041268568526`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {22.227343233722685`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {22.446032434687513`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {22.625373363343332`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {22.777389570641958`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}, {22.909317113684505`, 
       FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
        Thickness[0.001]}}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  Method->{},
  PlotRange->{{1, 5}, {0., 24.99999918367348}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, {{0., 
      FormBox["1", TraditionalForm]}, {4.605170185988092, 
      FormBox["100", TraditionalForm]}, {9.210340371976184, 
      FormBox[
       TemplateBox[{"10", "4"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {13.815510557964274`, 
      FormBox[
       TemplateBox[{"10", "6"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {18.420680743952367`, 
      FormBox[
       TemplateBox[{"10", "8"}, "Superscript", SyntaxForm -> SuperscriptBox], 
       TraditionalForm]}, {23.025850929940457`, 
      FormBox[
       TemplateBox[{"10", "10"}, "Superscript", SyntaxForm -> SuperscriptBox],
        TraditionalForm]}, {2.4849066497880004`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.1354942159291497`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.5263605246161616`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {3.8066624897703196`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.02535169073515, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.204692619390966, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.356708826689592, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {4.48863636973214, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {7.090076835776092, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {7.7406644019172415`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {8.131530710604252, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {8.411832675758411, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {8.630521876723241, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {8.809862805379057, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {8.961879012677683, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {9.093806555720231, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {11.695247021764184`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {12.345834587905333`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {12.736700896592344`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {13.017002861746503`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {13.235692062711331`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {13.415032991367148`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {13.567049198665774`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {13.698976741708323`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {16.300417207752275`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {16.951004773893423`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {17.341871082580436`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {17.622173047734595`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {17.840862248699423`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {18.02020317735524, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {18.172219384653864`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {18.304146927696415`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {20.905587393740365`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {21.556174959881517`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {21.947041268568526`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {22.227343233722685`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {22.446032434687513`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {22.625373363343332`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {22.777389570641958`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}, {22.909317113684505`, 
      FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
       Thickness[0.001]}}}}]], "Output",
 CellChangeTimes->{3.577657352463313*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"3", "D", " ", "parametric"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"5", " ", 
       RowBox[{"Cos", "[", "u", "]"}]}], ",", 
      RowBox[{"5", " ", 
       RowBox[{"Sin", "[", "u", "]"}]}], ",", 
      RowBox[{"u", "+", 
       RowBox[{"Sin", "[", "u", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "Pi"}], ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5776573812673063`*^9, 3.577657394562722*^9}}],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], Line3DBox[CompressedData["
1:eJxd23c4lX/4B3DjGAeHc85jr2gqUiRaPJ+vUAkhVBJaykgyitJCsiKpzMpM
RpG96vnYkk2UvffK3n6fftfvr19/1HW9rq4z7ud+7vf96Ynkldv615kYGBgS
0W/M6M8Tm/9+YeChyu9CE/dMFdfrv+VWJYVghnjY8QXk1rfffJ3KD8Jn9l94
wS8sBH1LRXj+II8dHuPJz4/BIwK+jsvRhWDf5agrn5C7nTGnWYd+xvcz5J7V
5hCC/obGKteQHx9XkXycn46PLWuU3WQSgqPzXtFcyI+pXPQ4mJiDVw/Ln/RY
EYSRvm4BURsY4Kiu628M+YYP7jbo+DAjCPc5+7AErmNgYy47ozWvGE/JDNJt
6RWEfmLRAWNrGAiWb3dZlCvDOXXMFWdbBaGGQXCsPPKWhLqYjU8V+O2q7yo8
jYLw6p31O54rGNCRl3hR9LYaT/zuV3aiWBA2fqalqy1gYMXoT6ltTiPeptsr
lh8jCOXdR5OY5zGgahG889lsE85UnOH+O1wQvhc8q5Qyi4GAL9u3Ppdtxu1J
P/csBAnCJmFezqppDOi1795yKvY3XvhTQEveQxASYsdqRUcx0Jq6LTnGvwO/
V+So8eWaIGQL1Dkj+gcD3NJukY1f+vC8cRWHnB2CUHFX7cG4ZgyEeAX1OZzu
xw2yQnPaxARhUeztKuEmDPyK4bnOMNyPr7Fdd93kE4Q/89l4q2ow4NRcXtgm
MYhX03z8T7IKwq4mB6MTxRiYuy5zzDdwGH/TEnaiZ1AAtq/mKcR8wkDdiyva
J20ncI92G7P9nwTgp37DAPbrGPhQ9cfZz2sWT7n8PsRMWgCOnPc9UWKGge73
JrqubbN4uG572sxWAZjaq/DL0hgDvtzltw1l53AnteEpT2EBqHn+obf9GQxM
3NbgLGqcw7m5TAfSyAKwuSaC7cEhDNQP3rt0X2wB/50koSo0zA+dPEKO2LJi
INrbiocveQlfzDft2RbHD+WMKVG0V3Tw6Zcog0X6Oj4QXndeT4IfvkltU1ax
ooFCNtqZ40nMoNOz6xyXKB/kkaBiV81pgO4i18RUwwy+LPfRXvPywd2866/u
GtHAKudS8JdpZmAUEVsqRuGDv60S8yxVaaCH5aBe5UESIA/ulVLa4IVXW/OL
ngrRgOnEShk3QQJYT85ht25eqCRAz31aQgXivZShz9UswOxsoY9rHC/8u2Oz
ioubCribJP2NW9mArlWeoZAcL/yj/WK+qI8LSN6qWb6WyAk+bxkPjz+DwdGt
Scq/9VmAgvyt0PoxKvDTWQ3syKLB4FiRna2yLCAWKxAWWaQCOkcLq0kqDdK7
U6RKOFiAb9cZZz0mGhBejz3TmUCDryQUt+gVkcDOoaI3HoI0UFMld2MyggYV
cvZqnd1PAk4TG2tMajRwtalx9pg7DdZw/6wRZWcG4gl/OgyDaWB6JynmjS5y
HeU/o/EMwKqd8zHzPlTvP6dt1Sep8Gz8fCN4ygA+FP38Wq9EB7fKO2ZUh6kw
anBon4cxA9B6sGnkC+jgyd/vQWq9VCiveimvkYsBGM671EM9Ohg9rilv0EyF
AeFeVQd7NnCo1+J8wIEOThx5LBj3nQoX9Jvdui3X8Nurfbb70uggqvj3bp6X
VDjJaXKw++oi3t8cSqhLYEA0/4M1VZEKx18KfN0QWMRvJTSrsO/EgOfXm3dn
9lMhI2P0A9aqBXxp6uREtjTqx0sv1H5LU6EkUb+r8cACztvrWdipiIE9tqb7
UiSpcJZDgsuSaR6vPPss5ZQWBnK5nlzyoVBhitWvkorwGfwQ3WXLSwcMfPy1
jWXyJw8cVtpGNLqN4T7egnxEOgbuu08Wmx3ggUVT3l+9Bkdx7nZumng2uu/t
LB0F9/DAtMpdB7dpjuIuSYmfLfMwIC8d3f9bggeevNlixEkbwe+wz+SXQTSH
8h3Id7h54EsRwT857wbxl5xlzcFV6H23r3pujHBDfY7GKp70HvxsoenroG4M
SH5NOB0QzQ1l+A7xWPD14PdetuH5veh9P+S7lYRyw53Pjnsl3evGDzZtvVzb
jwGN0hQfxkBumMzznpfi3Il32iytFQxjYDDmATXoMTdciFfyFfH6g0f8OXX9
8xQGqlPesfNe4oYT3g4MsSdqcdV7c0E9yxgQd0k67C/EDZsul8h3hlThhLJi
Vy+ao3M5YYcDqNywXzzo2uLID/zhuXyR6lUM9CtH24eyccMn1h92N/qW4Kqd
dtdM0PxWmf0Q+GOeAvf/lzgZ3l6Is7s12TKieb/HUcd5apwC75X47Y00/o7H
D/dYBCC/0PosVLyfAq95t4xQ3qXjIRrPxCxQbqg0+viFNFDgQQumu7hrMp7j
uK3tC/Kj7vmmfT8o8Hp/6yHV71G4RdMDj27kwfpHbZQKKfB+ggxbEYMfzsFv
KLSKfHGvZObrHAoUNefV0px6SET7vQzdQB5g7HJ4NYUCZcwzPdcXI4ihvXtY
xpDz3VVftoqnwJEv3J7MRxKIM68OmUDk8K7rXN975B8Y386vfiUW58bfP0Ku
n8QhbfGWAq0vdMU3GWcT1w4EVe9ALptfH/H3BQU+/rBaGpJbQByoDhzORN/3
4cdPpzyfUSC/wXCnGFchEdFnOS2L/GLZRbntDykwdVtijptVGRG+b/+PNpRv
NmX6qQ9sKPDJvFvExqs6glSelCWBrtcVc96roafR549qWf5vtJ6QO6d/ZmkR
A+dFP3XcO06Be0weJtr910j0VYS256DcE3y0GmB2lAJLPBJ+eU/9Iubdh1vn
UL5J5niFakpToNUJZvITzTbirvKVN+cnMHBX7dHeAE4KVPMtyZyJbCccn8kz
Oo9hQHg07Gw2MwXKvk49r7bYQZyaoto9GcFA2PDXpOFVLtj06skeQq+bOKyw
y1xrAAMCz7ZOWoxzwU+Y4gZ1vZdYUqutrWtD/ebFEllfzQWZlv1jb5wZJq6v
vXH0L0H3kX5thukrLkgaY14ptP1LQGVFlwUPDCyZXjTX3soF3zeEF1EL/xLc
vQ+n9Z9g4MgBTdscES6oyhn58zQ2Q7xbTcsKfYCBy3EOu2X4uODjpB1yz7Jn
CPk2RvXBO+jzJ5E+7GXnghVDCTqrG7PE95VjTK6XMCBXPHQqZJIT8v8I0Ijz
XiBMX/3H/2E/BnYzO73h+MYJ4yaP7nPxXSUe2vSAv2V04McpUaprzgmFGJ5l
RbauEv9FGATFEHRgwx38pcqYE64t4aoJu9cIUxky5385dGDs8WJK15ATkjh8
2EzK1whesd2+ygl08GGk0spekxMu7w3JUGHcIE5zLuQq+9DB7wdgWPAgJ6zw
+KZgpMQAvV7V3r9ykg5Mi5Impzk5oXLTg/aht0zQ4Nm46+NMGuiD2yvSCA5o
0vO7LiuXCV6WZuTWT0Y5Wf+6+HE+B5QzyYhzaGeCCY90PLAYGpCqff72bDYH
TD760CpLkhkCw1tqV1/SQIHehwyeFA6o43oh2ySJGU4L6tCUUA53aUPrP+85
YBFk1+fJJ8EDQyNsOcI08HYh8WnKYw6YkBVOkfrJCrsW5zmu3aaCQKGlFk0N
DmidY9mrEc8BH8UE/XJppIDRkydWtAfJsOevAplczgF3Kx5aWc6igKXr1645
95FhftJwVvIgB1Qjc+ucD6OAAp7OwIRuMpSy2ykQsoMTcmVVsKSaU8Dc5RpR
iTYyrKuwYV6N4oStVQfO1I5xgfOfNY9cqiNDxQf7ihtec0FefYeg0VVOECov
m0MrIMN9KnThtsvc8OYxu9xnJA6Qf1f18oEQMsz+Nor5PuSGRblK2ZR+MuAK
Oc+6+y0ZHltcNRZEc/e9qaKKczEZUE+vB2x/TYaR9s/OVtZyQ1tpbdf5p2TQ
/fa/A3tfkqHROZqP11EeyHpBt/b1OjsQVbMZdvciw9H8yezdrFTYfub81PMp
NsAh5H8L3CfDX0nmZ6R/UGFdnJXXGYIFcH1RCiUuk+GsxMcDi41UWDsYlPfr
HQto73dYcjFHdZtVv5HWSYU7W9VdNVxZQHjg5ahDZmQo95r+amGWCvcouh4Y
PsQCjtxKziwyIcOtLnO1GWI0GBJtKLz/KwnIV7+SIZ8nw5KPbnObt2iwrNPc
aOodM6BqZFhdOEOGFLumMD9GOmw+SVkVsWQEPFE4rQWQ4cCPG/R9HHTIlWi/
VVGdEUSTYuwpyJlzP8URdDp8KNUjhUsyAv83pP9O4GRonKO5nriNDoN0Qi6L
/2EA0ikH2UuVyfD1qZDnCWp06NWgc4vvJANgjS24N3yEDLk7by6quNNhsoL9
HIfGBm42JOBXcZAMTVRT7N/O0CFMNh39E76MmwvK2ubtJcPOhF3e1Ut0mDVc
rFirt4xPmVjd1kd+0k3LZ2aDDukc0+bJbMu41HaX1nEZMqxxwg+ycmLwjf1F
yy0OS/iH1fJ6KeRvP1D8z27FoH/xe47pk4u4iVLho4I9ZBibe8bzqTYG22Pq
ml2m5/AQqYJgLSkydFP9+OW1PvL7u89wx83hrVTzHjbkJF9+mzfnMHi8YU0o
4MIc3vWsZGvpLjLERlSDzC5j8J3deplR0Szuf4dkp448sDyUxu+Iwf3w52XW
oBmcvfy2lclOMlwzjdhge4tBEbVvkzvkpvHMuW/eHdvJsLS678pMKAYP7trd
o/pjCn9mxT6egXzrsopg5TsMBstmhIjsn8IzHSUbXiBfrA6/8V8c+r5BN6wd
1yfwvUm+XGrI62RLFc+kY/Bkxct3jW/H8NJX3rcKt5FhyEUZ2P8TgwEZVa4V
JYP4kWGZu8tbyZCnXSUuugaDDzk2r2/ZM4g/lA3+OID86RuZBO16DOaUNspe
DhjAT3nbDDQg/xb2mNm6GfkJh8/xF/px7e8tdqnIS9lUiKIuDK6+F32mO9GD
y8TOT91FPvt48NxID6qnw9VAbv0e/KEmS6kV8pvvOdbX+jCY2HdSpCCrG1eN
sLhlhrx1YPza2BAGBR+aTtduduJRLk+FTyOPjd7i3D+JQWWGLP6d21rx1Y9x
/NLIO2QWNV5PY7Dhx6o5qP+N91UfO7AdeV/dQubeGQyeuXqiQeVxCy5nSWES
R25Yd+GW2DwGr3hLCUy2NuGeZTYvMeQZSXfSHBYw+DY2uifKqxF/855JmQe5
S6xwYPoiBv0uDENcsQG/IdPtxIk8yvQd3/QyOgcUOFx4vLUWN33uYsGCfEvG
XM74CgY31jsun3pYhWs9VuJkRs6h/3u6YRWDzZyP7GdbfuBdwf/xMyJ/0K9e
EL2GwdYXl9yfyJfj+9MEHm1KonkCDITRvgXPZ370m/UrwY+dOHx4A7nsjQMc
m8jtRiI9zwwV4p72O1TWkd92k/H13cBgfq9xo6z7d7xkzdh9DfnYSFQE4yYG
5ZW9TCKUcnE/i/Obq8hTJHlULiOfme4KnRhLxxdnwj/98x1t7LcTkU+H7lvW
BZ9xo7QYp38eMH9sXwdyBev1sbhP0Xij34TJP7/yyP7RMvKugZaOn5Iv8R3a
iwb/3Ourt8kmcptYwz+CSo7EwSSV/3WP5Qc/JpFzvSh5r68cRtQY/af3z52m
LpaWI/+W/KfSPCueUGN6qPrPWS4a6vogl5Mx/7Wx8yux89Zt8X9+WP6zlSJy
nUo51jz7LKLH9m3bCnLx0ELeKlQH8tQ7VpPv+YQjo53dP7foIZ85jfyQ/3f7
KQ9I8Grdb1xG/kM58C4rqufKguE3pbpSwqVCuHPxX52bjl1XRdeFfT4vPsep
gqj0+WK/gHxCZ37wBrqO3i6tW8RFfhLBR21T5pB7/rgffxv1w1O7xzal8nWE
9AO71SnkZ8IeDustYVDtkwifxrN6YvhL+uI48ubJJSiG+uoTqYo3vaWBMNm/
/e4I8rVrf5Tt5zDIm+e+R8v1F1Eh87qxG/muTNUgbtT/UoVvZfRKWonnZBa2
CuSOhcb5yuMYvLnhx8HJ304wCpA4IfJOThcvo1EM7n706lrcjQ7ir76uejZy
IRkbYfVBDG7Vaqg7wtJNfDadUoxBHrK+1Yy/A4POZjtv7Y3vJUi7z7HYIf+c
mj79qhWD286Kht4700f47vqRZo6cOV7s6HIL6tt1JuHkxT6ioaJbUxc50FNl
dW/AIAepeFf9iQFC6bUqnwzyn2nx1b5lGORp/tC0MDhE8N/s5/glgT6nuJOc
UyIGP/Yf6+SUmCCKbWdV+reQoY9/7pWGjxikcthef5Q/QRw4/CazEPlWPfHL
ojEYfDb0orvRaJKIu2CZ8w550UZb491wDM7Vpp3d8WKKUDiuq6aH/Dz1xKq6
L/r7h9uqpdamCdsVhqg4cTKsspDo1r2BXn/4aumOa7PEMTGjhjVRMlSzszl+
mIbByFn7m4Y7lohTc1VB+wXJUJ695/khlC8rrmtSyXZLxP7Ys+t1AmRokO8i
t4MFzQdtCnksf4mw4g5nvo2cL3DoZxnKL/+cOkYJ/WXCoYP1Rww/2jeELlVI
d9GhC9Wm3vThCpGTj1lN8aI8DZS1c/tEh8WaKfzTNWuEVq5sDDuNDFXjhZJe
7aXDCd5DnApfGOCg7+gtKhsZ/tY6/DVkOx3G/Pm2RfwXA9z07ninwYrms3xj
n7cIHbacau6ZW2WAcveeTzuzkGFT6PalvWQ6POn8pODGKUZYsXKhtZ4Z5Z3O
UdZHfTRI9p6dvtTHCM/7WZefZSDDd0dKtU+8psElDq2q6xgznJvn1H+5xA5P
0y8z1A1SIae/2Gb6FRZYzyfxJGWAHVoJv6FIxHFDe9fI9l2ZZLjh3vYiLZUd
Xtt7nIHFhxueLXwiZ/gL1Xfq5Gj2F3Y4PN62u8KWG7rlc8xcnydDhYE7AdnJ
7PD12P2wESVu6L/XSEruIAdkzg4PjvvEDtWyTmtEVFCgqZbZS6t0Dmhqcbj1
aCQ7XG90H2rr44LtbfITmomc8CP7Qb7T/uzQzqQkNpaJEwqH6MX/ekKBtMaO
7aXX2aHGuSWvmmFW+M1J9Bz9OhXyr4yWlzCwQ6WL+x+HVrBCf+L3qIYdFW4T
1NS4sc4Gw1r2e+t8YoX2R3Q/Wz+gwvf8c3bMK2yQN3jU4N4NVpiwIyLoWSAV
7mpnzZOaZYOS4zaK5f0scFxn/7flAiqUMgyM3TnABh8+B98ftJHgfkYZh1Yq
DX6MLD8yXs4Gt4crNQjmMcEVy98Ch5Jp0Pgw/1c3LzZY73ly9WowE6RnZo+Y
ZtKg7veRHn0PNmhmUwneOTJB0R9uXx2/06Cj+fB/ok/YYF4oZ3yrLBO0EZ/f
tKmjQdZRu6dh99ig7ePoFx7RjHCK8io+YJYGJ05ff69mwQZvnb51Jc2TAcoG
qza8UaTDurOaV7VU2SCX2idY5blGJJZle9um0OG16DO8vPOscIt21byS0hqh
aDx5YSWLDj1e/R58M8UK76a3HHEfWiX2BOxYtftOh0wvZQHPKCuUNki8lH9i
lbCX7vMXr6ZDH5Zyl+FOVihVvnUin3WFCDy2ynt/hA4bui2TFVDdl+RPtWo/
XiQwk7FMaXEMar7dpy0XygrVSMS7Q5dmCK/6HtET99Cce3jJKl6BFfY+vSp0
jmOG8Dmy45m4Kwb1dj/T4JVlhTE89rsvZ/8lMm8c7+p6gvYIHyVd512ssPC5
26PDtL+ErXrUWQkfDFqkJ/TtEGaF1Dlvfw6vKeK1okFyMJofmsPTdfybLHCp
wKQjW2uUSC+4NXYxD4M1ZeYCOuUs8K1RY42zWxfx9a3zEXG0pxiRKxdZ9Vjg
zzxG630anUTy4nNu8gjaayZdX/45xQIx1TCZCnIHYUHXB91oHvdlf9aJVWWB
n3L2M8S9bCVYlYYyz6K5Hn484dBWBRYocmCSR/bdL+KkF1u+DsoB3DQileBn
gVkir9YFzJsIW49zOhFof7HTibhylocF5i94NU5sbSR0klflm9H+skV3+8Eu
NhY4W/BC5MqnOkKw9OEYN8olHY6Bw11LJHjWUjpJ/Ho5YWxtuBaE8s2v+3nW
k1YSLLkFH86PlBDryklrx1EeTvtNm/9qIMHavozUbNsigq+4QqMbuZt2u9TW
nyT4+M4aE3U6j/jTypLVgXL1wREdaiw6N37j/sauuJxJsLtLt6qgfH50227f
n3QSrPpoflWD6SuRQN6h4Yf8RKW2NWsyCTo5X5325f9ETPF9XC5FPgbLi6Vj
SbDt1t60Qd0IwrrQaW4M+e+X5YdORZBgmEq07IGRJ8TpEFvFDeSTKiqVpq9J
cKxCNuNerSfuGvqIWEPuE7zd2caPBLN0tblY1T7gOYrxAUPIA2UfqNp7kOCl
ezUZgi8TcC+D9Y/fkd8y09xt50qCZUdFgzmIr7i8ZgKLG3I27WgZC0cStLH9
c3YxMwv37RlMkkOe3hOmZWBDgpuLciYlehDnPn+jzhDVQcZ/rlfQhASDns1V
0qqLcC0W9zOVqG41pskXps6S4I2qeylaJ0vxwKkeAWnkf06kTXw7TYKK3vup
T1Uq8QMz055f0X7xyizJ9vhREtxhr/anlrcBT9A6OVeP9gXNfuGOKSESbIp2
cj651oZfN1VevYzy3zE55WfNL2Yo12AtU3GoA9+bFesWjvrtyVyO+q5qZijf
48Qj7dSJr4wctigcxuDFy1H990qY4XKTY2Hl3W78sNmZUw39GMx1YH7NmM4M
tTmeud+a7MXPv+bKZm9H5xX3m7VZAcxoDrcLcbUO4XO61vsqUZ7bmMx5JJxg
huNWjOlHPYbxuKOfHb2LMchSLpwHlZnhlX3nRnRkR/BwrdYWOYjBs/EsFTUH
mGFpFqewmNsoXrrkw6aSi0FWm2uOtVuYYXLYdY7jUhM4rXHbYzW0F1jvPqR8
dZEJbpXfVkVS+otD7YICihcGY3belmyOZYKFerRe/lsLOG/BO5Alj/J8zGhi
cYkRehs73M1VZQAR8WfWWtXpMEkj16IYzTuPuXCKliUDsNHlXT6sTIdOo3yH
2u8zwGCzobNVAQzAkQbDPBTQ+VWOaWDclgFif4RV37QzgFsDxbPtW+kQfN7S
M2/EADWMphaOOzECTU85evgGmue27vUfdzLAhAc3QqaimcDrLYJLhmlongcc
0qd6bxLyRQacFydJ4JhJzFc6Jw2Kv6m2rZlbJ17d93n+5RgZSDdsMEWz88AH
fRW+Oh9WiMTZA//FslBBkHOe2sQ0G9TaeNBX3zJLpKk8Cr9Op4L0RiZ6dA0b
fPQq3Ykxd5Yw7OKI4N1CBfL2/qlHk9ngb0cbqZ1hs4RoCt3o6CEquCaTuCF2
gw2+s9aQPWMySyROvxBLtKQCjg41+Zg2NGfveN2V7J4hQpRef2P4QQWvma7P
NRAs8J6c0lLTwF9CbuVQjYILDXSqjxUOODHD/uJyuabGKcL366d1vnd0cMjC
e4eK2jpxXmVMneXrENFSq29xIZYOahTvDQwtrxFlV0PPmzgMEYV75oFPEh3w
S8rWOKasEZrmGz3xB4eI98Kv92Xk0kH+0weqh4XXiJk9XrWieYMEX/UVWalf
dCB0/cJvx8kV4qSCrtHTogHC/sqrOh92DGQt+0gsBS4R4hY8x87U9xH3JQfs
eS5jINFwfxBePkv4bR19GVPbRfy8+P7j3HUM7KRprnW5zBJeJootfXpdxO1L
Eb5lVhiwEPjFdEtmljBouBvO29RJSDmeMtrviAEVpiRRnUBUl2OBr0/+7iBy
ztfbiHhiIGLX5QUF47/EF7FwTsbuNuL+Bl5/+iMGLuQtSaXVTxAZ4WxnRsdb
CA+8lW21BQP9g1aRh9GeDOOXEuPWagnGv6m3rrRiwGT3udixi32E/Z7EmYPM
tYTGSMyvrHYMPJi8sM0X9hJOvZGW2eQagimfNWZnDwbSH+MDr717CPp57sIA
/ipC0q9hWXIEAx3bhl3LD3YSEsyxwjH7Kgjamrji31EM9Caswm0b7cR/no3d
Pw6WE/m1qdc+j2NgUXX85LWyNoKJNu8/cLSMiDiEvRqfwsC445Xqt0Z/iCY/
8GT9RAnxOqCZ2XMeAyIK/Vq9Tk3E8ieX0gIzSFRTGuILFjCgucP87FPlRsKA
90/avp/fCfLDSvnuRQy8FeWcobA0EGFtmpItzQXEk+6byxPLGLhXtvPEyK5a
IiTVyH99Iofw7xA48HsFA8d6mwWjs6oIo2l960fLWcTurl9nUlYxoOf30x5X
ryRu1r47PUfKJEaEjfdtX8fAyoH3gnJXSomZL5cai0S+EtXR+dOFyM36jtN8
plFeTdDSj+h8IbiqrrzS2sBAK2fuWN0jSPgcbwM91xKJ1KVKrAR5UPzWdR7h
AuLS4KzsgwcfieDmp45Smxion+0EVxWzia22aiYcr6KJdrNdGS7IT8ix6kbq
pxFvXB6fkdR7Rxxtu9WQjdwnTig1uCORGLco6t7y6A1h2C5U24tcbMs01y++
KIIhKslAysiXGD/OlLiC/JzOTw32Qy+I7d3iCWzm9wgOQL367zm+1VeTA0SN
A+63ephP/qsZjmnhK9PI6S+vMpi5h+DkgEpHnQh3vH7/u9u1yAdTbpo/IH/E
xQ+1RCtGBeKmJM3iMOQMDv3S8vUpeO1gcISyYyhO2eM8r488JLXs+PWqDHxp
vEYhIiYSP6hvw7r073m9o4KfWGounvx+Po72IhavHOUtY0duvS+u7UN+Ia5y
yVimwywZv3Dki5MjqnPn04wtuntL8JKhvsLg7al41akWluo11M93fPkn3pfh
nsliBw8LpeGZMdaVaug6bhUsKup7+hPfnfta4TJTFn5HPXpFB/WJj3qr/n8x
DXjliTEr6aZvuPNTlRJJ1FdsIUvPk9oa8e2GQ3GuFQTe9MfaqWcOA9tNl74x
8f7CB9Xlz5l1Qvx4hWHQrhl0f730fOrg0YIv+A5nejUU4Z8sbvbVjGGASbfg
m/K1dtwoujTfOq8M/1puB3zbMNAH+dkP8fThj1JFnnF41eDmT2onl35jwDl2
LL0guw/vZzrekvS2Fk8x/amm24zq/KFCRtq8H9+n8Cz9nX4dPrWSPJtfhwHx
LrmAotQB/Ia7mR3tcj3uzSKY/bwEA2Uu2WZlusO4Z5CU4dOHjXhvQ8fCbDyq
m/HdFlffCbzPtDYeZLTgsazrvsqmGDD0lM8Fs7O4BC3uTTBnNz45wJ3a4k0H
sYXiB/axbOCCcWOcmnrDuFV8hay5Gx386LXTe6GzgW8NG7PS9x/GSUHlz5vv
00Gd1HBOdfAGPvFu75DOz2E865LioJ81Hbh6i6rN7d7E58zDSrapj+D9O7ZJ
SWrRgWn96tGbOxlAWUzU38OHRnH+pnuvJ8l0wDB2yv+4BiPwWPi9f1NkHC+u
UlQ/50wDsj1mAowuzMCn3qlK6s8Ufj5r8YPlVpQ7aoMXd8SwgTa/NymMr2Zx
+z+2T478YQcOTYnGrud5gEibJ7fazApO6Lwz2JnDDup/3lkOsecBrpMjFwIp
q7hmsXXOwlt2YMQ0kPLKjwdsESn9Uie1itfuNi9SN2AHahVR06KQB/jL1Wvs
MFvF28XdJyOr2cDFobb6EpSHbfO7/m7/uYp7OpY8tslnBdLVzV9/OVIBrCQs
HSPXcAlNq+3XPUig7gn/yz3SNLBLtoSLDDZwuwgA9yds4gfK+hSXLtHBM9bx
s46fGICwbsu2KfNNnKeuIjDrOh2AC3KNlukMIHJs55EAwU38lskbqau36GA9
+bDS+e8M4L32+7dOzzdw+gO9cU9XOjjy7XvUliYG4Mcwn9d7dR0/tJXGuBRK
B7+bTqec32QAh7E1G1eBVbxR47TK/Xo6UICph+4YMALpqSOZkdYLuIKeYGC9
PAbWU5V+7V5mBMc3DAbFJRbwzYHKS5qHMJAWdTBTkZkJlPh9yX3eNI+n8nKG
pypj4KXlB6ljFCawi0nOWlh5Hj+0aKWvfhIDxqvXC/dLMoGUNu2V05Q5/Fou
364AEwy8GRVzgyeZAIdVLrdE4l9cTDRKMfIpBq54Nb9yfssEYHP0p20pI7hQ
8ifhsG8YsHzAzYzLMIP6v1vbKlhHcNMxcukKRLkhu9NiiyIz+LsjKErPdBgn
t2kzqKP7oGp+o3YBZwZ9el+GqJQhvO94nPDbSpSTz5nTfM4yg2tPLbUvWvbj
LcJHXfeg+8wvmclL4z4z4PM02PA/2omfLt2pIITyrUwq4wqljBkIfj9XsDnU
jjN8VLxGQ/e3qnvn60u1zIASovfxzOs2XDHFZH4G5dsFg6S82N/MIPviTZag
8d84puMibz+NcuzNzw6BMWbQbqq2pyG8Eb83drfXHM2bFHKhTSAPCXwZojy1
ONGADzixDsSg+cTzSW9nqCAJ+Bt68w3O1OGRi9eO1C1h4GJCTXWwJAk8ujdL
Mg6qwi11DH73oxzrsbjb73KABLzcy13YJwpxfX6WonU0L++OC22vNyIBseZc
NQfP77jIsPlRXzRfr8RfAS/NSOAwr8xYmnwu/jEgY5MRzWmmMccTGjdJwIo1
ZfZXZzp+QdqF+wryR8XCh2ftSKC973xzCd9nfCrmvxtJyCdfSPEFu5BAscuZ
bwW3ovGV5DxyJ/IXS65tcm4koOGc8+cRfwCOlybOLyPvYGL0K/YhAdaWQxJy
vPeIRcWZPf/yp2g9fqdWEAns2utxW48vnJgX8E2Y+Pc83fd20s9wEuB2cB7N
l/9EJJzyvoPOa4Az0kxYNZYESqKX6i7c+krwuAi7eyK/+cTHISWZBDxsyL3/
FWYRjuKenfuRyxRzZWOZJJCh6CxC5Ssg9j7c6/Evh2m6lAHbbyQws3bwkFkG
JCRifB3/+5fbZt/WYSkJ2M8KWG0zLSbAzYOp8aieoq7nGTlqSKArUeinxdcK
YlgMcO1H+VPx6k7lk04SqMI2JrqMfxIMiadl9VH+NMiFvfwySAI8sHXzMKmG
eMSx9P4Sul4NO5iPN6K9/JZkro1qUj1RQYq124+ur/F3E1vGTRLY2c1s8XKt
mRj+xLBSinKGJaJzYlqcBaQbb70xW9VN/DZl3JLWhwGy7vVdYpdYQFDOox8K
1j2EQuWmYyDa117+Fok9dI0FBF8dnLxG7iWEXyuKX+rCwBMJUVUtaxag/TOH
GqDeR+glCTvkon3w/OnHAxddWICgaOCb5YIBYmVbxE1PlDMG53f3i75hAcbJ
QTwf4keJ5BeH6x1yMBDzy+Dzzp8sYPvzP6SFAzPERk0sa7oLBuz2ETeuyLGC
1TwXXpunM8R0gbnTVid0Pz4rNPBQYgU7E+oaa2tmCIMtsdGP7DCQx7Hy4r0y
K7iAmewzs5wlfHTkT69bYGCZ03Y8/xQrUCyjb7x+N0e8aEi+wHsWA1qjX/zD
LrMCzcqai8JMiwT7R4Omz7vQHAjslB4JYAVcCW/9H+SuEj3t7GaZRXSw9WmV
bdsgK1Dq2DoWwbRGcDAfoI/m0wGbgszf6TFWsNVQPjbm9BqhOqY5x5VJBy8U
xM9uTrOCi667+M071oi8I3fMxOLpIDxcDrKusgJ3+d03XmyuE6PPPf0sfejg
fW+bN+RmA6fYnhaqbGGA+2ecdDO10Vzd8/hErwIb6HO1rrLWZ4ID7+JMdcpp
4Fh7mvTsAzZwZBs27OrGCjPO3GS+6EUFQM5pkWWBDYSuScXeimOFiR6w6aYr
FZxk8urLXGYDkN+EpF7BCm27t+6/ZkcFdq6Hbpmus4HJm7v44ilsUObGVN62
81Twa4HpdiiJHXzUXj6iEMwGw+S83pfvpAIFpY2SbDo72O9Sz6UXxw7PvRf8
cOkpD4iaPBketpcdMDSmJ/onc0AVbn+GwhoKYNztFyZpyg6692GvOao4YM9B
pwt30yigYjxBbdqcHbCfTnhwc4wDHn1/6A7HWwrImN55MucqO/A3Fs39sZsT
su8uN6k1oYASsQJHBUt2IMaxKiYexwnjwpU/1Q5zgZRvpoKdDuxgvuPS8+k3
XDDhkkxi2Qon4H/Z8t/ac3ZwPiGnSd+MG26QTR3vs3GAmWMUo6AkdlDw+Onq
gjM3jM88SL8zQgZPO5+73vvMDn7Jzdx6+Iob9jVX39L5SQavgoveGKWwg3tK
lxv2l3LDX2W/G7/5k0GE2Xo2Szo7yFOfHpLdzQNTvncH2/OSwf25Y5el8tiB
m5KqsMMYD1wWbpDXEWEHBmFnPDzK2YFmNn7gWDIV5uXb8sUKsAJ0dp8o6kR1
W9JlFc2mwsPkAInPCyxg7bbRblo3O7iUKOE/VkiFAf25RZG/WICGzgOxiz3s
YOFgf+CFFirc80xC+2QQC5pjqxq9feyg8E2Lhh0jDYZLa7NEUFgAm6+qwfdh
9L2cBdwe69MgaL/83n6DGcw6BlDT/7KDyOP/OfYM0aAmNViztJ4R+HK9ivrG
QAZCFlfvmP+lwU7tb2UWSYxg4NS0eBQjGRRNeXVXrtBgvjiVZc6DEYhy/g14
wkQGbVF1I5cpdKh49olzgxIjOEkTsTtAIoPTJlueBMvRIdnUkhYbwQCYVFok
rNjIgGYsXyFwlw4HLnPwu5Vu4BnbkqjbKGTQucVdaM8UHdrEHvlxrGQZ/8l2
wJqJnwwMIsIAaYEOvd8OHhV3WMY568MKnZDHWkimVKzR4fY6see9ksv4HcnE
vYPIr18POk7lwGDWgrcI3+Ml/HXeqvV3AeTNIvdCt2EwKW31jsyhRdyws9xT
W4gMbi/5Fb/Qx+Bqf82wU9wczqcvbTUpQgbz14fm6z5gUDjn+l/ezkncZjVw
18Mt6PNPFFyIjsGg8SmWPeL/TeJpumIt0ciPhWdtMY/HoIuRzR5y7ARewvKH
uRy5zjml4sgvGMz4cmrB03IcP2ihNschQQajIR9IigUYVImMHZWfHcG3L05x
uSE/G6jCZ0Vg0AJyBl40HMEXXJaeRiBPllC18SnCoMcjnxGr7GE8pUQkPRP5
Ey5KT0AFBl/qT+8CD4ZwXen/LPuR926IBn1uxODAMR/JZsYB/GTvPiYFSTJY
KSh0P96MwWdTOz6oX+3HDx+WPaiOPPniUkzpbww2d94nIkv6cMZIt6uGyB3u
77b078DgQ27lK6LPe3Hm31319siPmhqUyg1i8BBR4X0E7f0iXE8bo5G3lWZN
Sw1j0NzIfXz/7058LE6ZSEZ+s7/yMNcoqrOB0UJ1aAf++HPVQCby2kOBYsET
GPSNbnidKtqGqwnuZy5D7j34efXbLAZFm3Oqjkg248zOzZc6kbOk7unnm8cg
FLm5urW3CTdlHNvoRU7jsOu4sIDB9JeCOgvRjbjOq8fCQ8jvzFxYj1vC4I6+
n8ZXt9fjIcUcPRPI6yjpkl+W0edpPL1j80ctXh44Gz6NXLRZWT96BYP3xy40
CZyuxk+lg78zyO1zZZp01jDovOfMyKxWBS7cPe2zgPxlXf82tnUMWpv2ni6o
LsX3qJ/qWkR+2/+ua9K/fyfN3Tpkq1OMb4manlhC3lSp3HF0A4MFkVGHuWsh
3mDa+30ZudWZRPUc5Mcd2TwOfyjAC3cKG68gN/mNZ0psYtCvf239cGQ2Tm8J
Kv/nP3nfSjsh37uc2Lk1Kg1/9+A0zypyxfjznzKR5xpdPjFzPAn/q658+J83
7jghjc71cI338Rt39Sj8wrPr2v/8h/DBDHSuhwabmX7coi/wgffw7D+/QuI4
/u85uMUv8UjRAifiFsvpf8/BgYRhYcsUcteza1JUm1AiRI7x3D8vcrCyr0L+
UP9z7+OMj0RvaNfVf34oXwp7g1x7zuOp3YVUIjKx1+2f379/IO8Ucocg2reX
5zMJru+sBf/cYO7XjVFUh1kHg4/h5/IIVd6TAmv/rovZbdF7yLlr83A/I4LQ
/hkd8c/1++1/T6E682KDpV/2FBEyLXSDdeR7Im9EGCC/+iFYgyWxhPi1HKS+
gXx0MFaldxWDcsyRHXc+/SAsL2cvMGwlg4QrZuKcyN8rMS267aoizIbPlDEh
15yfZJdA/bCbafffex9riP9WBqZIyKv8tZi4UV+J6j4uZ2yoJ4bezdpxIE9+
pc01gfrQTFDIg52zkXhpsb2Mgtyy5vZYDurb5GDtpbXjTYRj9rmXNOSXo37s
FUB9zqpXZJiY2Uxc/K8+Shi5b2zG0MQ46rfpOq6F4DZC+cZx3wPIJR9IEAfG
MPjla/HnU3XtxIni78ZHkRNMU3ctRjBIwSZin7J3Eu7+6m3HkbvMf/V/NYDm
APZoVutYN1Fw25ZyDnmQR3EQC7qvMyYYXeOSegnx+Ua258hdrXOi01ox+H14
6bjuiT7iWLOh3Bvk128PR2mh+SCznOg93NtH9AQUnohF7kVRvX8CzZmvnZWH
uoQGiO2sihdKkWcf/NVyHs2lffIDjU2eQ0SL9f0ubBsZcL+UThxH8/CLdl6q
qck4obRxYn0Y+WcOgWXLJAwOL/jcD18YJ1jWHzmQt5OBGXPM9SY0V5+JVjgV
vJwgLItitKWRc+nZx9lFYrD3eUHqp5JJwjxE+7QDci3zb9vLX2KwsYXM/uLN
NNFxYf4I3w4yCPMi3KduofocbauYWpohNJX1L8XvJAM3S9snWsIYfE63iL//
dZFouek/oCRNBmViwbwLGAYv2ygYxzAtEdOCtf1hyB9ltoj4UDA41fZjIvXs
EtGpcSWMQYYMopYKIu8wYHDipuwpl/kl4vs9Ue0m5I6nZA3xATospm80ZSit
EP3Bd+veyaLX/50C2hPp8OSCSPXzrDWi7kc2KJQnA/An/ue5nXTIdlHv1utq
Brh6Quu9lzLqn0dT0WZidHgm/IflljkGGGFs1HdWhQyaHVqZz/LSob1SEh4s
zAjvzvWvbcXRXlP62neNkQ6DGad/aN1ghGGxOnVVAN3vLx42X2ynQZd9Su8q
NxnhQtqb0TNqZCDlplpi8IIG30unfxmTYYaWrrvsRLTIQGaq6O/jbip8Pi/V
GX6XBZoPyHUxmaF835txv+EXFb5/zp3IFcICSUlbFFXNyWBzdNOe9ycV7uOP
VryZywIDYkernl0mg/asjTaLTCqUUH3P3bXKAvlXDZuErpFB132/fA1vKhS8
IiRV8ZgVGqSrM961JIOZXSfU1/ZSYfDc6VxrdzaY5vL4AcmJDCyuXP4h2sIN
LcT4EoVdyNC5IUnjYwDKoy7m7k0HTqj9cNsLZwEKDBgSP67bhPph/7fHiQac
MOOd6sVRBQqc/WS7h7UFvc79GZ+DBzlh/I0ZyyP6FBjzIKq+6A8ZXHK64DQx
zwFXJ1IKHf0oMGdb4X3dLjKQtf0WMezEATH1qRSdTQoM2Yib/TaK3rdmmJCx
I0PJCauM+53cMCiz+fgQEwdQuGRLLOqwQU97e/9RQIWrjOL1Hw5xAKvsczKm
35mg7N2Bk/xJNJi6z/XadB4HcD2ZNMseygTPW2+zmM6gQcit12dHcICdgZak
Dw5M8GJAc2XWdxrsjn+pvlzMASSzRz+9kGKCNSd24uwNNDjvklYqWc0B3vYY
vnIJZIR1i8yfChZp8N774zINXRxAXUy4IdWMAZbD8zev4HSYOe1/IIOVE/Cx
Dl8I7FglHhBuyZcIOuyLOG8cYswJxrbHblzyXyVCo7X1PpfRobT7RbKYOSew
8Qib4cRXiaONn7mGq1HfaRbwJV7nBEHjWbspkSvEFSdqvHg78h12ZzvsOMGd
EnfPL+bLRJNOkn/AIh2+tnHL+/ScE4wzJM/ktS8QarciQlz2YPCoYkDLryxO
8PTDlzt2RX+J85p/xlWeYFDVSM80QoQLrPoeOfrO6S+xbVzV+rUHBuPSHb9D
SS6wXM0olCv1lxA6KLfZ7IX2IIW3KeO7uMDVFIujhP80YXBmz7ltgRg8aXHj
9EUFLpBxacNXOGOS8GFyOf8bzQ+m4K9vgrS5gJzLtsm+thGiaOz4tVS0l20v
OQDvPOUCV+i9uyzACLHfvcThF9rLXGa0B3m80OsYhgzXxg4TPH4mZkNoLzsG
TTMy/blAq80eY5NbQ4RT+cb3ejT/Tjzaoi0YwQU0eX2fWq73EwnFOnoQzcsw
04iXh7O5gBC3m+ofoW4iYhD3ZkL7lMN/PMcnJtH7FjQHHlzpJDZ/tYrNDWFQ
flD8BusCF5h+zBoaBjuI39pJNxrQvC/KS1Pdtc4Ffp83NOLRbiNirxVihmif
okiqb3vCSQFROxzrS641EwstCR/sUc5Mk55F+EtRwNe5LfPOe34RZ9oNU37M
oXyOMg4Y2EcBW+ps3whONxJD0uU3KCjHXm75oqKmRAGe7wq5tzyoJ3bc31Fj
jHLP+di3JkENCuj20bnXJPGDaIgQO0tB+9E7cGlU/BoFyDQ/V1RKKiPyXn/z
+YG88ItSdbo1BWx/4b7ufrCEILZfuWqP8pm7O+G2rgMFAN2hc5VB3wlPdeV5
b5TzM21n5yLdKMCr/GLqWnwukdp37fMS8jdsS80GPhSw88hVaf6CDKL2oAPJ
AO0R5Byu+9RXFKCzShNVikwhljN5VsKR040yOxpDKeBLUcuRbRVxRObHuRd1
yHnLKUwfoiiA++jg/bmuYOIINkX8Rb5ss2foTgIFhMW8t9/73Y6Iq+0M+LcH
ie4UfKH1lQJwO5nIYsYAnOaStf7v/w8C7fZZ2Vx0rs2RWf0QEoUnOT0g9yB3
y3UUESqkgGHDcIbvdkl40px6egZyy+8tzJw/KODC0FKWeWwafmgSrDoiH5Se
SybVo3NwX5z0btcC3ECswSIffd/2yUnA00MBEakBhZwjEBeY97+iiJzuZhpa
M4Je5+CrT1NBxfimm/HbMFTP6M3X3MEzFNDqyP7kzkgF/q16/ZM4qr+5zn6d
4yRuEHXsoITHj3r8cbbqaz50Hc+tVwuQpbhBw+kiQS/xRlxW+IVlK7ruG+et
tWhy3AA8Vz5516EJH+g7+dgL7S8Nfx3Dth7hBsGdCkc4xVpwnQJ5+8gZDGra
Gj8x1+IGH9QbZ8dt2/HKNK2PBNpTzE6TzU/d4QZWoF1GsLgD37I+8qUG9e1c
35hW2H1uII+fdZUU6MIZtjazlqM+f+57UnvOnRu469yRutbVjYfrzn926MPg
+Ok0j+K33IA9jEdZ3LMPtz1mK/HtDwY7ypq+1hRwg9gphouKtcP44q+BbRi6
HxmO9W++5eABps9WKb33RvClYPvbOd8x6H6n+r0zLw+4MtebbycxijtFWBw9
kY/OYRdeKF8V5wFMJ4zZFe6M4W+u6lyTzEBz6S5wPCvPA66/SLdSpk3iJI1j
thWxKOfnGEI+GPMAV/EDzMZxf/EooQvnBp5isEm/ZttAMg848rLTcbNmAdd+
GG/8WBqDbBX8JzhlqEBHHUszFVnESdtthMp3YNBo//53MnJUIOHluPbxxiLO
6szUtLoFnUucxqGeIhVYsFZ6/91cxC/Y5Z+V4cVg+LkUm3hABTT1o8ct9i3j
PhkS2xJX6bAwRknhiSEVsB1tuObnvYp7JJncEi+nw8kdP28NPqaCSo9rey/z
MoCx6dYOQV063Dh9TsS1hQo2TPqwe09JIERnfyCHDA3+vbU44BhIA/pPrytW
HuAC+yfF1dIuccGSSwUDodsxoOoc7FqnTwNffJ+jkxUzjBGS2HGVgw/wiZfC
RBMa0NPde5mzjRlyHrE8XEbjA6YcleyOFjTgfWDn1YQcZnitZUFFWogPeDeJ
P2p0oQGb9JT4JAdmeE7Lkrq6iw84hGzMl3ygAd3+gIGqYSYo8YjV9qs6H6D9
5KJbDdNA4i4xUmQtI/SRWxa8+5QPvPtiqfDEhg5CNSsL5yU2iR77J0saK3zg
zud7X3Y70gEltPAp0+8NInIN+Pcw8gOH91PChQ/ooHVViu+v/wZROHb040My
P9CSuP8514cOQvT0mxzX1gmFhCCdPEF+0Kd3daIung52TX/2E29eI3aeNhFV
V+IHHgdBVmAnHdg8TGY94rFC/Ao+7vHOkR8MTsqQ96lg4Ijjh8CA6nniulDu
Jj7ND4Zdti3vUsPA98v6FE/neaJc6jP/2BI/WA+4Z0PWxED04SsmV7bNEzFm
Ca7BjALgKOcn+MwQA6SaHqzGeY7wDl+QmKMLgFfSjy9dtcaAI3m75sOts4Tc
FoXDBQcFgN+HfXnJrzBwNJBb9e2daYLKNcrn/kAA1OxIKNoTjAELxrg2YZFp
QszLLAl4CIAQbp2Rl+EYaP1WGifgPUWkqew8tuknAGRg8QO+WAx8fM/MaCk7
SVS6+R55/F4ARHZf3bmZjoE9O/jrz98bI7g10vh9CgXAdvDqvm4tBmzuX72x
k3mQuHLt96cyNkGQELp9q04DBl4c7w0XNxggrNi67gVSBcGBm5UfDvzCgAHD
lrq12H7CP1t7wkRIEATs0uHJasVAV+PkC1uNPkJ2ij1rfo8gYFkKvRrSj4EP
zjJQxaub6CcZ7pbVEQSs8ZfMmgYxQO2Zi1tL7SJeYAxv140EgaPHPsGlYQwk
00/uNtTrJNY5tB5VmwmCbu/krIVxDLiakNZCAtuI1UGjZNs7gmAuVOt63SwG
WGVriDBqM7ERxjmc+VoQZLyfZdWcxwB3XSmBpTYRRzzehHu9EwTigN0gaQED
oRtOzx3ONBLazxo/XPwoCPYf7hjZvowB58SIHZMv6ohOrgkPphxB8F42dJ/y
CgbcTHRSBY1riBNn2S82Q0GwuJkrrLyKgZYbonz7Q34Sd1XO2ST+EASfV260
z65hYOwB0F3Hyoj/jnJJn20TBECtMzVxHQOXbHZ15+oVE5Y/U6p39QuCnGTf
nac2MGC22t1rGgCJIA6mt2vjggCypRyr/fdzjLKc1l2h+QT3oahH9fOCwL4r
dubYJgZyX/pZdfFmETXW0m4fNwSBiNPQiVfIg5TqH5UEpBIzESrhD9iEQGch
97F/z+vZRThK9/B9JAw+OZfoUoWAwr26mlnkc+fT/rvK95bYfe7e0g4hIfD/
fq7/+//9XD/4H943oZ0=
     "]]}},
  Axes->True,
  ImageSize->{347.2913333056795, 432.},
  PlotRange->{{-4.99999756422438, 4.999999999999836}, {-4.999998329138099, 
   4.999996825250256}, {-6.2831847942665, 6.2831847942665}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{0.01310148286958324, -3.285983245720028, 0.8075533790368848},
  ViewVertical->{-0.23276688823137676`, -0.4868751786555155, 
   0.9030935349479388}]], "Output",
 CellChangeTimes->{3.577657395929435*^9},
 ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzdnQuYFtV5xw/77X4sy32XZVkuAisXBQMqSxS5rIIBpIJiRMQAEdcgW0QS
pAkYEBMDqY01FZJqq01MYhMaa5qLjZcWU0hLnpZiSm0aJY/QNiWNtKba5vFp
FbU755zvnZlvf2f2nP2+D2l83N1h5pz/733fc5kzZ87MLF6zed2HNqzZ3NG+
ZsyCTWs+vK6j/fYx8zdu6tyV66VUrw90/nxzjIq231Gq8Oudzv/fWRn9ivbw
9v/oPzXqpZdeUosXL1Z79uxR69evV/v27VOrk0nyau/everpp5/W/3ruuedU
Y2OjOnXq1CqT6k39J6def/31CK5OnjypVqUFXnvtNXXo0CH9ryeffFK1tLSo
t99+e1Xakpdffll1dHSo3bt3qw0bNqgXXnghbUlOvfHGG2rbtm36XzeaQ/+r
/1SrsWPHqpkzZ+qfrVu3rs72vkfbvaJfucjH683eU9Gf6mhHlTXQhF+nVtcl
bNeJOo/rPTZNzv5eu3at7LN5fil58jaESeHox2ZabtK/KunrvNL/h6Qf4JX+
55K+AdJHaa1j1v6fRn9qoh3DE04WnLeJjmdGLyPjTyRjb8jY7M74Y8nY15mx
WjLazMvMxvOSd3Jmuh9KuimQrvOnKjp2rUl8SBJfaOOatLpgXJz+oMS1qC5N
K3I6+qGoXmNyHciM4AVhYs9mRjVQbIf+UxN1D2r79u3q3nvv1Z3C/v371XsF
NA9EcyC6NCmaVwcPHlTTpplYHT16VPcZnaALRHdBz3R37dqlrr/edApvvvmm
yuVy6vjx4+8R3V/rme7mzZvVxo0b5XBTU5M6fPjwOVILKJCLesbauXNnFx+O
HTs2TnyoBY0rgFUN6a7uWg6tra2pcnjrrbfGCKtfuVimIu3YsUPdf//96tZb
b1UHDhxQowS0Mkz0DyTjjZCxBjJeZTL+nmS8OSzj5yUjleFNYWK/IxWHCnNN
mNi9YtlHIGMeMi4xGX9TMv6GZ8Z+1hYaq8w2oneLa1uDRJ2jm1lG9y4xdjvo
Uu9ZKKcjR46o9vZ2/ZOzv0+cOCHpCm03OW6y0G0Cpbp4h6chfa2DjtGXZW3J
bOBhLB7D2RK6XUqIWncYKD0SbDOAjeLJYMhI1UJ7rM/H/W3LLxpFWtPXi/JQ
UN4CytWSo+hEvdj86xYJxucgNzV12nelEWsXGDXX+wHQxy32QRGjRCRWB+nM
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\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Parametric", " ", 
    RowBox[{"F", "'"}], "ns"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"Sin", "[", "t", "]"}]}], ",", 
         RowBox[{"Cos", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sin", "[", "t", "]"}], ",", 
         RowBox[{"2", " ", 
          RowBox[{"Cos", "[", "t", "]"}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.577657512403249*^9, 3.5776575405661793`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
KbgQt7PNlKb1EGiYlVo1k1mMOS11zsn/myfNZ80k5UqQkzuVd9s/AqtdrhzX
KS9BSedzATYtBH52S0iJbilFtrJtNSKNBA4zhqXp0+V4Ts4qdbmSwB2T+bOP
NlajxRXV4TVIoH3rzZM1N6vReZT7aG8mFZ8rZT17A6uRKJx0S8qg5m+j8eay
XTXY9zPe7kQKgadMLnHVHqrFqrFi2dYYqv9YuqwG5etxK78Fl4UvgVzyIdLj
LvX4U3NVWoYXgbf7QvZPV9WjvkqJw5I7lQ8kHo9cb8BVT8ceGH4isPnYiruu
1L3CTHZVQsUrqv5TGiR+PG3GrVMqFeNGBMo27OVv+N2M21ls4wYMCRQVmhgi
J5uRJvCiq06f6ueRKUlZixZ0iBiS9NEmsGOrpamdUSt2Skt45KpQ8/kWj1GG
Vhum8w/tDztCYO1TH9k3Xm3YxhOgIHKYwA+8b7ddrGvDH995CtwlCDSIWnJN
Um7HicPxZbqiBOqeZik5cbED0zZnQYggFQ8OUzHzTV3IWtvtlTzHQJMr5LLg
sS6s5Bb9mzzFwEuZG/9lXu9CXbH5h7FjDNyGxR8X3Lswe+X5MScaA0+sEmHI
cXdj85AVf08TA0cHHxzjZe3Bwsdqf/b/ZmDaw4aQi/29eG6nz76txtTfZzi6
Dqzqw0sPT1/NvcvAoI230l+J9mFrVkj8fzqUtXr9w+734UxD72kbDQY2OK30
jhzqQ4anpo/qWQZ+v/fukAu9H58GpGVq8TFQcHkb/fXoIArwJrmPxI7iNoUk
lZvcNCz8Ytv1MnwUHcOtivZK0NB18N0PtpBRfNFaWZJoSsM9c+Xe8x7U+amb
Y4fVCA2VP/XcsH8+ihHwVdR7cAjNT+uyTl0YxWX7SIkjrSO4m+1GvWsVHe85
Oq1ynhtBpllb8dESOt5KVN7SupGOeTyR2XU5dLQfnW7WVafjgJBK9mwCHWWf
xiFvBR0fRaZClwcdd9+T6xmhzmlH3zjsOKpJnRf/221mQNWVm/aO98v1I/j0
+Ye8hEQCLT48YY+oGMGl17yKs9S+fTa0p0qhYAQbTFjp0qvGcO0nhYvPk0bw
YpYWaQZjKKDbzvbiywg+fH8ljStpDH8/2N+7VmkEXXpiX+Z7j+OGQVGpD3+G
0c43abA3dByvJkR+6k4cxpJh23UsCeOo9HHjU+moYdz5MO3L/vJxHKigdm3f
YdTkvU9XJsdx6UzgGt/Hw7ju217FgnsT+MbFlY9HchhHo0eG1KUmUaAvkPM8
dT94souHdeDsJP6081OtchtCHo0/VtaKk1gW895Yy2kIX9f53HS4O4ml8zq7
rj8awkb+oi4970kUX3lzaLXyEM45bzpyfn4SHz2Rq7zIMoSKNVK7tf9MYfyM
kdN5XRrW1ErLaZZM4VZFgY1S12n4Tj3cVqFhCiOnRDOFFGh4Rv2w5A5iClWT
hG63StNwi+A5Yaed0/jics/pVew0NGJXXS/1fhrpd+C2QMwgPres3T6iPIOO
7uN5kuMDeHoHi9mO2zN45MJ12yv9A9j7V/au2v0ZrLf3Sr3dMoBqoceOB9nP
4OKT4+lmuQO4+azutpG4Gfy1Ql718pcBjAoT61TmncXbjT5/Cw8OoPexlb9F
S2fRW/OnAZ9RP4rlV7mU1s1imdEg87h2P9r7Pre/1zGLSilX1LRV+1Gqhhb1
eXIWAx3ExDyO9+O9i2trfLbNoZRo/VAuRz+6JY5vcLaYQ/m9WwxEI/pw14qA
mN5188g5XLpPpLcX/UqfDxQIzWP+vieWPxt7UT6Fbzh4zzwqTYVW7ynrRbn4
KDnZE/PYVNPbLZjQi2NqUWygO49h4w1huXa96NZR9Jkjdh53ldg8ltzci7RT
y7fqzi8gt6rrqTcKPdifVmj1R2EBz2+WeZp0hrq/P5dTCFRfwLMSftqdh3rw
S+HkQWXDBaxzqjwkLtiD7l3X/e++X0CrZFcNl95ufM47JaL/dwFf8rOfdHzZ
jZ/0RGO/XFtEc83qozoRXVglo50be2sRz7yy+8np34VCC8Ea+fqLWCP6aGfi
py5s8Ps+1mq1iPZraKrTVl04DbtL/7gvIovNqhalM124zTPp+oWaRaxWtsp/
970Tw/r4lq7LL2G8yv78Uno7CnqWx51WW8Lltsayxsp2NNkj/ETo5hJ+PX35
xb/4drzHnn8412gJpx24JsoftaMVR4tYrNMSrlNMPaSw1Ib/vhhLrCpYQhW9
YuX8NW1od9p6VbjMMl6ovPCjd3srvu5qnXA+s4wr+wz4Z8gWtBxNijeSW6bm
vvQp1u4WdNXh9l5zbRlPP3VpYg1tweIVu2tpptRz1ssysaItmHwk5KFQyDIm
fvi6P/lAM17QNf4qx8ZEGjPzRo50Iyr9q/33h4OJrinPa4Q2NiLha1exn4eJ
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
v/+X+z8fJZ7J
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
J2T+v/+X+z/YzZzb
     "]]}},
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1.9999997185624094`, 
   1.999999756548977}, {-1.9999997662703457`, 2.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.577657541759439*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "NDSolve", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "NDSolve", " ", "solves", " ", "a", " ", "differential", " ", "equation", 
    " ", 
    RowBox[{"numerically", ".", "It"}], " ", "returns", " ", "solutions", " ",
     "in", " ", "a", " ", "form", " ", "that", " ", "can", " ", "be", " ", 
    "readily", " ", "used", " ", "in", " ", "many", " ", "different", " ", 
    RowBox[{"ways", ".", "One"}], " ", "typical", " ", "use", " ", "would", 
    " ", "be", " ", "to", " ", "produce", " ", "a", " ", "plot", " ", "of", 
    " ", "the", " ", 
    RowBox[{"solution", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ode1", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"y", "''"}], "[", "x", "]"}], "+", 
        RowBox[{"Sin", "[", 
         RowBox[{"y", "[", "x", "]"}], "]"}]}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"y", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.577657655943593*^9, 3.577657747272223*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"y", "[", "x", "]"}], "]"}], "+", 
     RowBox[{
      SuperscriptBox["y", "\[Prime]\[Prime]",
       MultilineFunction->None], "[", "x", "]"}]}], "\[Equal]", "0"}], ",", 
   RowBox[{
    RowBox[{"y", "[", "0", "]"}], "\[Equal]", "2"}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "0", "]"}], "\[Equal]", "1"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.577657723651957*^9, 3.577657751874894*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sol", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{"ode1", ",", "y", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], "/.", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"y", "[", "x", "]"}], ",", 
       RowBox[{
        RowBox[{"y", "'"}], "[", "x", "]"}], ",", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "x", "]"}]}], "}"}], "/.", "sol"}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.5776577563870897`*^9, 3.5776578169438066`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    TagBox[
     RowBox[{"InterpolatingFunction", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "10.`"}], ",", "10.`"}], "}"}], "}"}], 
       ",", "\<\"<>\"\>"}], "]"}],
     False,
     Editable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.5776577591173267`*^9, 3.5776577680987453`*^9}, 
   3.577657818230825*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwtm3k0Vd8bxu90kHmeuZcrGSJJGtDZTTQoIpRoRJIQJTJVxoTKnFAhIpUo
NDlvmWdJg6GSmUrmefid71q/v6zPOvfs/e5nP+9z9rl3UTjpamZPo1AoAnQK
5b+/fv37xpaX2VCpf4gq/gZDfT7ik+0LbDB7dbO4+hWG9gv+nC6aZcOXG8G7
LxZjiLXJbdF1nA2Mm4//FLzE0IfwaK7OPjYk9A78bHiGIXXmEZ633WzoeR7D
t/UphmIL2PyJnWw4pKYwn5OLIfuOFyKmbWxY2pDE6ZCNIS7Nr/JQz4YVZwT8
vdIwdP7DPYXkGjY4dFltf3QfQ22WjkpelWzIz5XKaUzF0OOAWVWt92xYHLu8
F7tL1vdRZv39F2wYOt1izxNDznfh+N4rd9kg7FC26H8VQ4tcqvttEtmwcFmy
TDkAQw4po6Yb49gwfuz4r3JfDG2ouGY5EsWGY48yeYYukfNJPDxx/BobHq+k
hFafI9f7ZvASOsOG960tMp1WGLpukn9Z1oENd5Tr8+YOYmis+7LfzEk2iFwr
w3nNMFTKyxuYZ8OGCsehtaLG5HxHNaNYpuT6vsQ9LcTJ+qkeGZQNbDhQZ8OF
VmJoo3kOx511bHj0rLnDRwFDFRm/HNdqkXoG+UbnymGo08hU46QqG9T+xl/+
I4Yh8SiNwlIZ8vOtLiq9GIauSQ9UhlDYoOlnMpfXzUCCzkw15qIinHPLYer+
ZKCUd5YRRbOKELN5Q8CzNgYqPl5uOjCmCP6XHhD+Hxnob2Za6+5eRVgnqUeP
KmGgQ+tsf/PWKMJ1vToN+3gG6guK3fewQhHGDu3yULnNQB5fap8ZlCrCYRlz
7Z83GCjKe/MFl7eKkLHl4qDyVQYqJSQWG58qwgNVyXq5swykadzMHxOjCDX7
Kx6k6DMQZm+kLWWrCPyOzG3XPtNR89G1Vr8PK8Jsm8F1gUY6Sj0k4/vOUhGE
zHZa3KqiI13jf+UnTBXBwNNxl/MbOnJYl3A4Z7siyPR/1oi4T0dV1P4remqK
kLWz2uq4Ix1FpIY02k4rgNfnV8pzf2noUKLbxJoJBXA9vb/rey8NKUVbS9FG
FeDgQ8qZgu809C5Y81TmkAKcbpNJWVdPQ8POX6aGvyuA4tkr9NDHNGSqpyx/
pUwB9hWklznb05DIt3LntNsKQPla51xTT0Wg/iAsKEoBnhcf71sopSLnAN8M
hxsK0FW/doD5mooqlNd1qAUrAN/z93s2ZFLR5Yv39xZ4KUDuF+fpbD8q6hL2
USs7pgAfkIlVtCoV5e/TGujVUIA9fFJFPBcp6NgDHkaVmgIIRzvHrDtDQbyT
fcycVQpQD+7r99hSkENyipWLggJs8r8Ut30nBUn/5q6cElWAGI0/FvaiFHQt
rPch5wILJsNL9xUcXcbNSpNOqdawYPv1e2qnni3iSi09PyorWHAx8LtV461F
fKpH09qhlAXtq6+EC7gv4nc4Sk3T37KA72PKAx6dRbxz928DuWcsaDOoYI68
XMDPNelJCsWy4G8GcfHQ83k87HtH3YwtCx4f3VK3MWQW9/ln4HyrmwmBlwKf
O2VN4MknNgyg70z4i5dstLkygb/9pGU3+oUJPG92xa06PIEvFbFtzGqYYHIl
FBlzT+DXrqwwFn3OBAuFX0VNTuN4uNBn9UR/JiRWhO7vURrDk9Y5/74nxQQb
g6UXJQvDePGlJKdnJvKg++rUDoWsbnx/tAVr6Y4sBHHz3BuSqyUuawvsNoqR
hf1RltRBoo7IbK46fytCFp71mQolnGggloT1SxUDZMFUeMPqmY9NxJMYRQcj
O1mQtxDL5RNuIXjj/j2+pSkL1fivl1tD24iahOsb2KUygBmxN6Te7SaMUt7t
3/VHGoDn+c+o9H/ESGTHAqNPGsytG05unP1HJPnP57z/KQ1FhWOTJqtGiD/H
NnHqfZKGgRf7H5n7jhDRii8JjdfS0Pp6sqlcaZT4kZWrJRImDbmzYe9UXccI
z/y7wj/Y0nDzcBFX3cAEwUp/DUly0rBJUo5HVWCSqI5pdbGSkAaz4QqJ4+sn
CdmLErVN3NKwu0pl4sjVSeLDhpjA0lEpaK3RcgqTmCL434VPPCKk4IvFg+oM
/Wkis9L7i8cRKWjvtai7e2aWuKPtuT37oBTsp7hP/4ucJSJS3PN+7JOCtMzr
nOL5s4S7x9nw3UgKOF+59nydnSUMmLZbmCulIIvhrLgudI5o8USZNcOSsLrS
cnb/nXmCpszpqXBNEty29kz53V0kJm/Ruy19JEGsPcle6fUiMTC/bBJxQRIU
HOMSU78tEg0fZ1SnHSShcPl+Hr/YEnHHb+h73V5JeMWzNazzxhKh9bl+p5eY
JKTWRq8/dX6ZOBoUK9b4SAK04laZ2UZRoAGf4vRKk4BI4SlV7SQK4PNWc6xk
CciUTj8z+ZACLHeZn+43JeAbQ9La6B0Fuo6lPRL3lIA36dvjpH9TwEEvT+/o
dgnonp7ef2M7FVzGak/8/S4OvyxCby31U+HHE42D8V/F4W+Zpci7USqYnLlp
iH8Uh6dXPTvOzlNBq9NM/XaZODTJOfsn8dNgrL51QuexOIjUr8gx0KGBZ3Z/
qK+XODQsL7U98qWB/3H6Ux4RceA1+GvsQ6NDXqNRVAuvOJj9PiaykZsOXVsi
XFI4xGH1SGxwvxAdDOXE1qyZE4OVR3jT5RXowN+mnGf2SwyIg+yN/7bQIdV8
T/6dZ2IweobffKUXHZo+REWfzBYDF3l7bpEAOtC0P7mrp4tB40omPhFMBwdB
m3Xv4sVg1egJ89sxdNCsP/ei008MyrkTQzY8pQNheLtwlbEYHPwj07PlFx3G
Xn6OH9kpBpH2Ntud+umgtFL60itcDMSO0nuu/6VDGD19w951YpAv7CmZOUsH
U3hR7CItBtajEjHmQgzo3PTt9csBURjYJVgWsYUBFA0msT1YFITbeg6V3WKA
r/jWo8H+omCSXyMxGceA6eWTixWXRGGGz+2O1F0GDDdn6u1xEoXPr9eKb3nI
gHYvzWJTE1HIPlOza6qYAYVlBs9tpUTh4O3pdo0fDNB+esz0nrAocI+NHLrf
xYAnCVf/dfKIgmKVlxlnPwMynMo17JZE4FzXnr78fwyIFtyX49QtAi4x2q+u
UjA4Z2OTfumJCLzQSlvgYGEwsNN/26tMEQioXpCpYGNgt+b+r7l7IvAY5z58
eRUG1rQepn+0CLxXYx/4oInBrkdnk4MuiUC6vrLuR30MlCYux93eKgKUyN+O
Y5YY3P+erPNpswhkB3IGclpjIFNZ8klURwR2ntbeLmyLgXASTThRWQSsvZxa
uE5hsIyHR6XyiED/p0keHxcM2m7cCX38WRjOaRnxXA7E4FM5K/d4ozCY5Rju
Lg3GoG45q0msWpg8Lyz20MMwKPEolLryVhjUjG/tPhuBQdqRT48PpgvDr/cb
TD7FYnA3zrppRYowvKSeoH+LxyC28ddESbwweHce1WtJxCBk+4iBargwpBiF
7SpIxsBJna9p0U0YHkocNuHNwOCUfexEvpMw6Na7JtU/xMDmnoyUox05386O
8JAsDPaLqJ1sthKGRzNSZ3/mYKA9bziRuUUYOIJ+3NJ4joH6+gZJm43CMNnf
6pKbT+rlamEgpC0MsW1iAuwXGIh3nwrxWSkMDY5n0qcLMZivuSJpyisMF95s
8NjyFoMJBpcBxiEMphxub3zeYTC85eaJ18tC4D6y7UdeCQad+Sk5SuNCsLHx
RgntPQatf5QaW/8Iwc4/BleZHzBoVs4dj+oTgp+LNFWdUgzKkl7rz7YKgUCy
59qd5Ri8a9l64uknIXjDbIrfWoFBIX918Kl6IbgTHj20vhKDR9e+NtSDEPAW
dNpzVGMQ4TRxPC1LCDZpx3Qb1mEQnOETbPVACPyepE/Q6jHw/0HL4b0rBEVU
O3oRyW5mQuOeUUKgZ4RYnI0YnIlIlFgdJgSHZC3WppN8soKp/+uqELTG8hhu
aMLg4GbN4L0XhaDieViA0UcM9l14mU1xJcf7WZRZSrLhU/2Gl45C0FVx+MuG
ZgzwgdIxp5NCMJp0USCD5I2KeyVYNkKA36CYc33CYK1Ns95nCyFYV/b9gR3J
avGHj4ebCMFjtx8LxSSzmzqD8N1CYPvmvR3WgoEst2P2xDYh2Nyk07ab5KMl
dRGK+kIQFcIpfoPkB+5r3UzXC8GIVvPCB5J7lOPN/TWFQA1Ub46SrNw+p5u7
Sgiqd4fXi3/GwPHmMek2lhDYrbAq1iY5Z3vZIqe0EMwfbzPZSfKfaZVf60XI
+lp3xu4neU1uZNkpXiGIVcgP/o/dj49l3caEoFKQqfTf51+IWt0glgShPsPD
9b/xpqreuPydFgRE9z/933wb/VhmMqOCcMN7nOe/ei6vDV6/e0gQ1P3cbP6r
913voOSlbkEYfOx1KJxkStL+hYwOQRCp81zeRfK2/QU/mz8Lwru6t6ZLpD5B
NMlSSqMgLJYH7s0hubLQN1OzShDYs7+HjUnmPvvrus17QZhtWtjUR+pvzDQ8
F/5aEJZ/Zah7khz1Kce0uEAQlgZefVgg9+9jqIBOX64g2H6YWfQm2XLk29zW
e4Kwo9PpyCFy/xMzDH64JgrCzJG7l1+R/mg/lPY+5bYgdIiNbBAi+fj7s2Gz
gYIgkzEcnEH6K+1i09lVfoLQeqhBuJP0Y4/qehMLT7LeFVt0hUk+E70k9txR
EIrblTda12CQa3hq9scJQZCz5Rd2I/08PFfZwXtEEKbvnPT2rSL1PnU73XEf
qcd1mT4vsh9eSEyFxBsKQuW4cp8j2S/TtdZOZbggWIb9cTQpw8BXR2ktS1sQ
ar90Di2T/VcyECa6X50cf9twdzVgQE35O+2jJAjWGh7m4QSZN1hRyVdxQQjo
iwgbJvtb/klMovy0ALipsQe2F2GQLmZ77PKgAJz3JrTfv8RAxV9Z+Uu7AGys
T/yiQ+bFWpNXBZEgADtdQ6WW8zDYMfqjYeG6AKinXhBhkvlzdr0a1i4rAEc3
v3oXlkSuB3uV5SkgANSHXgEeZN5d/my0R5gmAKp/grMPknkYftH+5u5+fqge
nGbN3Sb9+fK+VPFzfogf56N+JPN1cL2EZpwhP4xQ+iyzL2AwgmU2aW3ih3ec
h3qnz2Mw81nHo06dH45aCProu2LA5WlWTBfih40rm+5nnSHrL4zc5t7OB+zg
YgHsKAandRlWJm58EOvGtfR5BwYuHDGzQyf5YOLPYNzVrRh4flFIDrHgg+Nl
qm8Vt5B6eeK/3m3mA9OyrdE7N2CQWXj57GqMD6ZXzl/gVcWgV3c0YEUSL4yo
1hgmcJN5veHHo9JSHugMCnxrW84Ah0cbLA2LeOD+aHf2HDDASeo2vTqHB1pv
nz0f+ZYBbvPbjzbc5oHp+9xOsQXk85rIFmk9xgNnakzmlR8wINboov/wPDds
DnRca3mZAQnFDern/3GDd8Lq3cYXGZCkqtI63sUNySl29za4MeA+T/u62Wpu
+MDz9ftfe/L53IgG6YnckOFxxe+rKQMqrHgPSulwA6WqpydOiQHVVfbU5FXc
EHXPt79NngF1m4in8jLc8H16n4+oFAOaZdxXKNG4ITxpQcWejwE/f34t0Wxa
AXJZYYd9JukwczpddYfzCjghwPnBrZQOal6bl10yuCDh/qCgmiUd4Pt+te54
LlhrNG5mvJ8OlttPWVhd54IjF41NjxnS4Rp/xGPchQtazrM3WenSoTXju5Xg
Ri7g6ZbrjRAjzz8fr+Q9r+UE468x/pSPNOhTqzwxMcYB2ouR4RF6NPC91R7h
2MsBKcV5WzPW0kB46l9Rx1cOMNMvvpyzigZb3kvyl7/lgFWlD1WuidAgzsrp
dVwIBzSfsXWxGaLCjiA+kQ3SHPA3Vd85N5YKD76bl3mTPtB5FP5tYzsFtHu0
51p0MDjBp7i3oZECZUNCWloqGPS/yrlqVkaBvunGu338GAwJNVNWPaGAmrCx
h3kHAxSXIguX/CiQb7hDUeMSA7hhOs9Glrz/mc6Vzlw6vG54WTMYv0RYFIoU
6t2nQzRPZcYtnyWi7+3Y73jy3Jgbv71E6PgSwVWTZ7XvMh3iXoZapqksEft6
Vq95bUQHCwpBzBUtEl8kV/6I6aKB+/SL156NC0T/VTF9I0kaXH3GblL8NUdw
+z37F8NNg4ILZS2bS+YITa/d6Z0LVLBsc1RVujtHeLr4cV/+RYW595Rkp4Nz
BMeR3m+5OVRI7IipKC+bJZR0Xl4UNqCCAV8T63nyDHGy7+Cz7yco8PzsFTFX
1SnidZzKzgHLReJ1IQoYfj1CcB3pP0XVXyRM7JY23YwcISxZmdekFRaJDK16
4RXHR4ixHDYY/14gtFSiVK8zRghVkNd7HrBAjPY1CgUnDBOJQ6JrLz+aJ2Jv
PvIryvxNXMSpcrxzs4SKrm0sLaaX0BpsnViTMkXYlW0XO5b+kdjxun3FouUI
kdd6x61J5if+NOfhpkq9ESLhj+/J1UM/ccm7rmdus0YIlXq9fgmbTvzLNEf0
3pZ/hN94gXe06i98pY+lYMrcMFFe9Hvnrg9d+Ierk7zI6C9RZLep98dgL74Q
tY4jpHOQ+JhzfCmY5w/e5FppL50zSKzWW3Q8dfYPnm56pPypxyAxEqSDzdb8
wfcIBwZ95Rgk0no6WHuu/8XvxDXTVDUGCKOz5QXnaf9w3eTzy7XefUS/i7nN
qvER3C372YyQSDdxpkhB/0DxOK7F7xK4rbOLuK28ePRE5zg+6r6a3+NJF/HD
yN18L9cE7q6fzW4x6iI2vRXVzrWawC82pu2P9/1FWBqrh6ZOTODjQ+q719f9
JK49iR7VXDWFcwTO3Dd0byUsn8ju9XWZwUONLxZm8bYSz29Ofbh7ewbnEh+r
5cr6RiwuBgxFv5jBubN/T9W0fyVuuvps4ZqbwQUafxib7PxCNNzh/M4fOItL
ypTPWEl+IjYm3LWPjJzDLR3YD5p9q4mG8xp3/IIW8PDzHmHRL6uIz5ObVjDS
FvB3vqWuZsOVRLho2n07YgFXijm1pflYBZEuSAl+MbuAjxHp7R+3lRKfNU5P
3HJexOXX7VqdJvSaCHnYttF47xI+knjHbvSOO6GSHalm83cZ96XFlhtuPIyf
S3d0V6ZTkGbSqUpR3QCcdc5BO1KAgszXfXsbsjUWlxNs4lVWoaDzDmcHy2Iz
8QctmVEhhyiIQnm5fKqkCO/YkH6cv5CCKutaw9eZV+F1qTLhiXZU5OjVVnlE
vRp/O38486srFXEptTOC6DX4v+krPAwfKtrj0+HfUlCLuz+Mn1W6TUV1qj/d
L4o24ocPvnW4/pa8f7v7k/ahZjwQ25b4R4CGnO9fipPLbcVzVe69SM6mIf2p
6YK1km14hsqNc4/yaYjX2Kt5Z1AbrnSPpyj9DQ09mfYScLFpx/nX/t125r/v
0/Zfvl7C+x1nDsxpaI/QULF/Sckz3U48S2jgfo02HW3WeJ9vmtCNp03p7IzM
paP1LV/iS6q7cfkPpJQFdKTl8+fy6oVunDev2LfuFR0pV0ts5zrRg/MLTi20
VtCRiL3LJ0KtF/c6ssL5RCcd/UmWmdAs6cMT5563rxZioP7ta78lj/Thyuu2
9AhKMFDXkOFbbnY/HmXcozsoy0CtG92D+kL78a6r5wY9VRiooqVKNPXAAO52
S6WKE2ege7ye6/l6B/HDrlkWK5wYKKnghpSPxBCeLXvPeoMrA8VbP1gc2D2E
z5zdaWt9gYEiHtWVlz0dwlmu/CEB/gzktYNt6ev1G58vKQ43imYgM98mz988
f/HKcoV9X4sYiOYp1mEnNYL38+7bu2megayP5zQX64zgrS+Cl5yXGSh/D17N
azqCJ0odVI2jY+gk80zhi5AR/Ne3GoFSHgx9qHp7izExgtfw8G+Nl8FQoIzd
zoyGUbzhR3Kf4iYMdWCzejODo3hEaW9tmj6GdEYitY2xMTxxwbhcAmGop6yI
OaE3hnN5ckj+MsTQDheeue3ZY/ix1Q5aY+YYYrzPf9odOI7/+2J9XswZQzaP
jR5uuDeOr1sdEjnkgqEXcR13b7wex2Pv7UQvz2PIzonj+rrRcfzh89sh6pcw
VC5ifSrw6AQeM8i2Sb6KIfml4cNfvSdwzk7ncfkgDHkOBJqqx03gjb3VhxJC
MKT87onBp9oJ3OV3QtaZGxgKcaBKsjdN4sqUWkZcLIZ+mMbzXzo4iYfFPH1b
EY8hXT11rNZ1Ej+mVuwxnIihPgGLMffMSdzBvn2SmYIhw1eP6j6ITOEHFpS6
eR5iKDXdoFR8zRR+L+6JxnAmhqYim1857ZnC5U7T0yoeYSjz5EKm8NUp/HNh
iIx1LoY4eU2vnhyewtXrHFp4CjB0aJU16K6Yxq+KaWQmvsBQzja7ZW6lafz+
IjBlCzG039vLr+DwNL5sWyjF+QpD8X33vRnl07jQQa+b50owNEB9XPzt5zTe
smGEI4/A0Ga5l9O5c9N4462UbYNArs+8+qKF1gxedYhfBJWSerwfPZ95dwa/
ec7aKaASQ14d83mXC2fwvLb1ll5VGKqZxkb2f5zBaUONso7VGHLRlHaZ5pjF
Dw9VbV9diyHYrfSkVmEWfyaY/4hShyFhe80/9/Rn8ektLqO1JBfe3ea0y30W
N/Hy0DVqwBBXkXG2bOQsboBF6E6TbN1sOTCSNYvPJoorpjZiKPfv8VXlH2bx
3jCY02vC0BLXWYc732fxvCrmhyaSTZUuPjw3M4vPUQq8bT5iKA0P6NkqMocf
fvxL8SfJOz1jTg7tmsO/rNczqW4m9bmd8qDk1BweNA8tWp9IfXKzOqP953D7
uQTTmyRvrnrOPH1nDueLLijtITmi+81RvRdz+O3uf5prW0i9lspTBBrn8LBG
oZgLJGtJN3V0D87hKyYqRp6SfG19m0wxYx7Pznm4q5PkFtMe6wjmPO7DoXGX
6zOpr/PwneOb53H+5rKBVSR7hc5807Eg+ea7tVtIrkmjSa5wm8dVr5t67iVZ
toTX6nv4PN7Xea/QhGSXVvH45w/nccuQwrE9JMME63MwzOMDumFqBiQLC6qL
WrfP47t8Rm2VSbZTX2+uOTWPb3lYFMFBcqEhHk0TWsCj68MKv5P1cZ3c/fGL
+gL+9+N822OSrf3MBR8bLuCFZrdm3UjOTbQ1CTixgM/kPRXSIHmp4HSUue8C
jngfKXaS+pg2nq9flbCA+6FC9XCS04Z8eBeeL+A93fPq6iRPYCF7m+oW8D6j
IMVSUn9DhVvhGf0LuHfYdn4zkhP1k6q9aIv4tVDx4a/kfg1ZZXDtk1vEm/s+
wEGS9T2eGilsXMSFOKaDqsj9jooqDpk0W8QzKXs2rSO5M/tDefW5RTzlsV5H
LOmXwM4v293TF/G7c8H9+qSffrzae87r7SIu0a4pfKue3N8YiPf/vIgf3nPG
vJ3048jOnMFwziW8oWqNiDXpX2MmU+Q2awnftOZoVGQNhrJmYvQTNi3h000n
pV6Rfj/62O9m+tklfNH0vNUM2R+vg8aKs4OWcDujWxy8JIsdPd31LGUJt73/
7J1EBYbqBA+sf9u4hF9bttSTKCPn91Rqb1m3jH/gMtApJPsx3uQOo914GfcO
aey+TvbrqAq/5i/7Zdw+zS7M4h2GHrVPX/mbsIznFFc8bHmNIfGttcocC8v4
4O6vv86/xNBGPpZKCDcF1Q6dHmKQ+dDn3aa/QoKCquUim27mY2ibuYmDgBYF
9RyPUIl8hqFZbNMrmZMU9OquzqOV2WT+uI/Xp7pQUFbYuy2XsjB08OeTLgUf
CprYNR0PZH7lFSvyqsRS0LMWXb/NaRhyOMt7TKeCgrbY8uXXJGFI9FuFR1Ez
BV148L6/lczDDzuuhm3+SUH+HZUlnWReyslPPUcz5LljiyH+OZrsh6afjH1q
VLTymS/P4XCyXwySpJp0qahMIa9eKYzsp5yDmubbqagoz4p3IBhDNwKrrQ7b
UNFrtv7vg2Seb9MtyLGPoqKQTWP3K8m8z7sbYuo/RkXpU8YGvKcwVCsS0i9A
oSGepvFwoeOkHjeC/R/w0VDOmJALry3ZT75BuWUqNLSS58HnLksMhdlc4+I5
RkNeznN7hPZg6LicPyTU0tAWBiXwnCaGfOL8rFRbacg3282kSo3cLz6/4dd9
NHThX7Sq5Cpyfxd9ZH9Q6QgrDvwVzyT344e3l9JGOkqoenhQQBBDgvcuaj3P
oKM390YTu4cZSF3iYuW2fDpSfxKaHT7EQIY3LxxtIeio5naWsnIfA/kGeERM
t5HnjJyyzZu/M9DAsfMDBuS54vXxtOjPNQwErHP3a/wY6KDYoX8N6QzkmmYn
2EOuo3Y58amn8X+/j95JjiJ1SMF6f8wYMtBT0waVTW4YCuITuue6lYGGlzZs
jbpOPke5nR5s1mUg5yM87hvfYmiO+t1pJ5OBnETzP0UocCDLWxpv2f/oyCFk
OX79Hw7UZLhF9UkwHYXY6rA7ZziQ71XTsWx/OsrUOfMsHONEVme93t25REe9
Xc2VP+U5UfW4lJLZGTqywzNnrh/gRN0lky+VjOno5Iyx9Y9CTqRxJ6B1hwAd
HXVKkgu9yoUiabpjfDdoaL51RcNoJBeSm/SU871GQ4m7vf1tkriQmLWcRIc3
DX1UOfRzbQEX+uTvY3DekYZ29Is96OjhQvrOu+uGd9CQqt1tJe1dK9DuiN6b
avNUNGEbpv6dnxv1+hUztpI+ulU/3W4kw42Ojh0NrD9ARRoGpyPyV3Gjx6Gd
K/YYUZGDrOHfUMSN1IeXJoW1qai1jf5M250brT/5G7o4qKjEKkA77DM3Oph/
+t+5JxR0/YDnpnXJPIjXepV5VvsyHl2n5pybzYMOZRlnOMIynmz0M3VlEQ/y
aTQ/TXm4jOcZ7GJINvOgQfVdlfnnlvFvqtKNC5y8qGy+PYW5uISr0ErsKjx4
UfvIy00U0SW8Ih+7dXgvH8pVjppVVljAmzRef2g+xIf8hgTSrlIW8LZHLpN7
HfiQtGRl2rOf8/hw6lfrLVf5kNv7YOfglHlc/Eb2SnYRH7o1WBkkLjGP25/a
9+aPIj+6cblLt4w6hzNE4/oC5viRaFl7iOLLaVx42J9fmFMAuSs4WZ25PY0r
VDnqZogIIL+GhC9h56bxLb76IVWrBdCOyDTMbOU07t3TvVLomAB6695pyR8z
hQ+/0LZPKxVAI9M/ZPVOT+J/1AbOnzQURHpt8Uemx8bwr7XBI0ECQmh6qIjv
Hv4bt/A5qZtUKoyMu68VVyVk4c48vxUbrEXR3BPkYTjQR/z2fs3gOSGKurFL
n+y29xNOA9f7jE6LorSX+31MUvuJ0+UqOe89RFFJ3SXhUPMB4mSAw9qXEeT1
1Inuc28GicPjv/DkElFES9y8HHvlD2HY/s3GSVEMlWR9yTcaHiHKdz/akqUi
hnYPuBkLSo4SO4ovsXo0xZCNtmBd4dZRYmuceI+tnhhymhJ7lxw7SuibHDx7
4KAYoo5XHqvcOEZolzZ6bwwRQz/2dnW6Xx4nmI8r4jmGxFDhm4TqtV2TxMF7
xa9qRsSQ5q+KhWjuKSI8JqcjaloMDcRqbavUniImfKIUJTBxNGZU8fTRtSmi
xtjy6SqWOCoeqVk2Zk0TnsO95bssxVHWU6t3/OYzRP1abDL8gzgaf/jQelf8
HEFTnpYwqRZHo8pvfKaL54iN0oObRZrEkUrjS37v9jkijVZ/5e53cUTxFH4x
zpwnvD7F8ubOiCO/Pbf2VGXOE0oXlZTqNSXQnb/99vOPFwif4u3mAnclUNsS
R7xg3BKhbdM0cuyBBKoNdJ/fkrdEDC3bROVlSSDughO/jGqXCGsjz+oDLyQQ
Tsm7MUhZJjZ/eYTH1ksgVmb9uIvTMjEzzrdaiiKJvpm9aN8rQwHPNd8YbHtJ
pFgiWsfbRgHNT3ZpHmcl0eln2mDXS4E+z1G87LwkktlzLuXxCAUsSrh97P0l
US+Pxz4OTiro7DMYzUqQRBzBb+RGtakw7pT2fXWNJOJa/dY5O5QKbpnOhbpr
pFCYNMucbyUNfjTKxPHrSqHX33JFlNfQYN9sjUefvhQKYGtNrN5EAzVj1bXx
e6SQxw7WCWwfDXpGex9P2kuhs667Frs8aGBlcOzBi2QplPl0rPhECQ0qHPiv
RKRLIQtx1gH7Shro3Hp31C5HCmkqu68/1EQDwW4ZWdFiKZSowLeat4sGNWHf
4j0+SaHRxT9NTxl02NJyIEKbWxq5RAeUDxvSIXeRcpZbSBopS52+928/HWRW
5e3ukpBGGa0ZPZ2WdJjx5ueMXimNrrukTMU60CGfWXt1FEmji7b3pHcG02Hl
2R2X8i5Jo667O9eSzxHgpW04qdkrjQ7czShmqjHg1SW6ed9vafQt9KTDWi0G
OPxt3J46Jo1OH9Kk6OoyAL45ruSnyKAHSH+N5DYGeDxLGvgrLYNsrznPbj3M
gDabJZcnpjLIMKCqRzeYAaHNNcfsrWQQNc34nl84A3R2JZjKHZVBLz7nSBbf
ZEDUOi3tyLMyaKb5ojdXEgO2cp+cdA6RQdfNE3ZJPmXAo6Jyn9VvyfG27vZa
+sQAC41o554PMihbtvJNyDcG0NKP2iZXy6CAfD1v+ncG2ERNb+H9KoPUDIIi
23oZIGCvSvszKoM2HbhtSJlmgKdwZNjjVbJo8B8PbZ0EBuyww96nNGVRbEt2
DacMBk2LK51k1ssi3yTJvI/yGKgNluy9sU0W7faomdqhjMEPYoT/rK0sKqWA
R44OBjvPHYxTi5FF5z8tf/cyweBC9BuK6x1ZlHH9xZVzZhhkFCk6F9yTReMS
PIqHLTCg0Ua36efKojWpnJfFjmAA8ZEj+8pl0fp0LQ22AwaboWLv+WlZtM2e
0ZJwGYMzvRpFLxdl0WRA5PplXwwSueMU5+hyKOWg+LhtAAbTB0/NXhOUQyve
z8VTgzB4MbicGasqhzbu6RboisBAU2QTrfiIHBobD53lScHAduP9cwsn5NAo
46jD71QMImw5W5GjHFq5ds/lD/cx+J31+Vn1BTkUOvkkyyoDg0f67rbtkXJI
fuXzEPnHGHw70VrFjCXv7ylLepOLAWco0rFLkkPbeJ5cMH2KgcNHfp6/mXKI
3UcPO/Gc1NfhcfESIYdsDkjdUCjCwOyGsNL2CjnkMJ682q8Yg2t53jdD6+TQ
m2Ltp02vMOicM3IQbJVDqXO2tsfeYpB6s0dEcUwOldD2vJZ5j0H9i70BDjNy
aLOYx2PdDxgstOYP5SzJISGqW/TuUgyOKF19v45HHmnt9NhrVY6B5Cs5151K
8khhOf6RcDUGS6eyZITU5VG/DkfqMsk9/GurOtbKI56VajrdNRjk2e1QuIDL
IwtK696oOgziBRrqcUN5dP5rzUeLegx8X1td5tknj7qNcKpoAwZGgmc/pVnL
o8g7rnYXGjFY/WYiwOWEPLKaqr8r3oSBsIP/6s2O8ih9aDzwGckzglytmKs8
enPuojz+kfTTm9vBHy/Ko8zleudyksscZLRTfOWRWNJxt23NGOQIPfzhGCiP
VmdcUisk+dZbzRs64fLo1uSOZNYnDDxPF2+g3JZHHa2/Kq6SbCO8rac2gVyv
qMnjVpK3vau9lZAqj451Xdij0oKBiqOFwamH8ohOZT88RzK/yM9BzVx5dPyp
4NtskifeOcbP5csj9acdNztIbnMc21bxSh7NGfMpkO+DACK+/24DWf8pQTfy
fREyS7Bk20pS7yN6fuT7JEScublLtUEeua2p3bX3v983RaUmJ1rkkY1HTzP5
PgqHiLQH0C6PvpvGyPx3fYvT6v0RXfKoybVW8b/7lcQK56wG5VHrv9MDK0nm
BjyLPSKPnF3UnTGSR5yqzf9NyaNUTnjSTtb3Wcyc8mZRHo1bFuU+Ivk1dOSG
MJhIxSvc0Znk+2cdDpvxMBGDK6lTmeQQ8RFMXpiJWCs1Rb+R+ji/984flGSi
F26etCskmznTj71kMpGdQHiOPMkbJSJ5riozEW/OaZ4XpP6Mc/ftJHWYKF6Q
Ov6B3K8hCTWhns1MdKEGv6RPctOHgnfPtjLRL9v9z3LJ/U6WrBQ3MmGirYuf
dM6T/rhWaloqbMlEKcbcAeWkfxxd2lx/2DCR24coT0GSdcr+Vl10YqLU5lH7
cNJ/0q6XLm49z0TbXtYcflWLAUWaqsjnxUQXTfrGfpB+rXMV9ckIZiKvY7U8
/KSf86VTV7lFMJGIYk2IRBWZF+WrWvRimOiwrmeKRCUGp2T0ND7dZ6IDctox
82UY7Kooa03NYqKc3fnOP8n+0Ty/P8TpKRMF+MCXV2R/zVWc+El9y0Rbfhwy
NQMMot3Dbmt9ZSKuvBZ/oTfk9brc4rDvTHTy4+zL92T/nlz18WdnNxP1pKUk
nyH7e12HlObtESbaELB49v5LUq80i94ZBgvNSxkWZz/DQL6pf0aJi4WAk1dI
gswPs0Vv3gM8LPQt7N6SD5kvb6xS12ULsZCfvtv11dmkv3j7rx6WZyHxPuux
VWmkHzd5xwUrsJC8/IuQA2R+TTjwZD9XYqF+Cbdb7mS+2bxf07RCnYVeUMbG
kpIw0PD0kn+9gYU818h7BUVj0PBzxRvpAyx0fU2iXeEVMp/5khsMD7JQn5ys
soU/BrqbNbvcrVioXa1P4LcPmUexZitqbVkoyNHRcMETA9fdd618nFjIaWvB
gwJnDAQLVk+0B7KQQO+tPjdLDHZ0lnByhbLQz6BvHgHmGHjxHZDRCWehm4LS
1UGmZN6dvrgt4hYLCcm15HnsweC5bMkt/RQWejvc//KXAalHiIlGSiELfX4l
ZDujSPbb4ZHdr16xUJUsffkqE4PZ1bcdPr9locX7Hy1osqTfPzXf4ytloebV
exn9ohj8ZVkK+zeyUKlbzi2cA4OwNzbTRwfI6+kjN5T7GdARtSji85uFtLpz
2iS6GbDmZKpWwjAL8Q2tP7b8gwFfuDrPNE6w0C63sP68LwxgW57qwKkKaKmP
oKaUM6Bk5Mx7lrQCmv2qHHr7AQOEy7h/6MspoKcfK3m6khlgn/B47hBLAV1l
H1yvksgA3i1/191WVkC7fl83jYtiwOEbbpnUdQqI1iUSN3qZARMrL93o2quA
CmEsPPsAA9SOBFlk+Ckgf5/je+qn6HD4fKEw46oCurj266rNI3QICx1oPBWk
gE5t27r1ziAdeguM97BvKKA9nc2/NTrocJ9XDE9LVEBvHVw8nwEdxEoeqtwv
UEAR3rFNWCgdKAqV83cHFdDvyvGZKC46rNkwWzz/RwFxnl1+oUShw9F96p5H
RhTQPeX1mTnTNHjjfXNEeloBnVbI6wrpo4Fns1XvHYYiWrevss2/lAa/Awca
EpiKaN8wOmh7mQZf+lakxVgoItxd+YllOxUqDl5PfnVIEfHtt9ob/JEKhR+4
En4eUUShtt7rMyqpEJ/KGaF+UhGJiC09zy+ggoUl5lnqooj8Utc9FrxBhZZy
yp7xUEVU1n/9XqkuFZozpkfNXiuiGVetqtSrFPggfOmP1ztF9I4LDr2+SIH8
K1N9qUCOnx97quwMBaJtJtuHKhSRavRCXvoBChwQHS+/9kkR3eR88ySSRYGm
wOE7+X8UUWbmDIvTc5loONm7VZjJRsvzGY542SLxi5E1E6fIRuM5wvmxGYvE
RKbjMyllNsJ/BYW8DlokpH7/llXQYKOkEyz7SzsWCTuPsek1emy0X8FGveD9
AjEXuPxknxUbNfEwrssXzBPKD6Wkr99kI9MNIl27zs8Sm4zam3hj2Mhgae3z
sL2zhPFgcuiteDZKjmuVTFg5S5zXYE0mpLBRX92OPGbrDPH2pXJT5mM2Co75
qN1pMEOYVawLKatko3/F8uPspSnC3nFSf1ctG4k/Wudv8nmK8OIuGq9tYKNA
pXvsPblTRMr+zSc+fWYjjsm2FU8OTxEDX5B+VzcbydsvZqrnTxJzXrRx+342
uqP18mhz6CTBJ1OWPTjERuqigX932U4S2seMJEZH2Wh9cvOKTM5JYid1RcOF
STY64UR8jeiYIA6l1wTNzLCRinrK4vbnE4TTzgg93wU2yhU8eq82eIL4//83
oB3YpS629QTxP0hsID8=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {-2.7291561580627057`, 2.729155947450738}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5776577591173267`*^9, 3.5776577680987453`*^9}, 
   3.577657818255603*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
oB3YpS629QTxP0hsID8=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwtWnc4l+/3N7L3297jXcpMUTLqviOjCKmU0SA0tCga2smngQqRoiEhDaSE
1LlDCNlk7733fI/v+3ddv3+e53pd932ec17n3Gfc1/Woepxx9OJgY2M7wXr8
3/tq/84pJpNKhgTdov1VcqAvUGq2mUYlly8yV50ozAE70fb5b4tUctZAtOPZ
ye+gYnSWfmaaSvbyBlIzs3Mh7344b0cflZSInranOwHw6v5TIn+pRFZsf909
+zyIPH/Y5sZzKuGWVd2f960I3rOfS2AzpJIdyrcutz2tgk27U7hj9KlkzO57
J9/fKihM6Dy2To9KtvWvD/Vgr4YOKwcdDw0qKfhg/yTuRDVIhelk5stTiUEX
7YMVqoFbcgNFwWxUsmj6dbZushb26x8YFixRI3n/nF6tvt4AfUGRO98WqpGc
Eb+Y3uwGOFdfmro5X40IWje1t880QNgl4/Onc9VIej+79gOfRsgHaXrFJzXy
TVQz+o9rE+jaVgtHRKiRqazHfjbWLcDlZbVe9oAaITJbNLdodkD1wXX7hp3V
SEaBnlbU9g54sV/+yg8nNXK8yv6B8PEO2Gg7/tvdQY1s3eou6p7cAd760c4p
5mpEXz/2/eM1nVDM3n/DRFON0FpulZmv7YKQF8EVB+ZVyerb+hyjTj0g3vD7
ZPxjVUL/p/bsoeQgEK3Xd4PCVImYmU693uZBOHn9SoL3A1ViNbtKY95zEArV
9Vs076gSwNv5pr8MwmX/VzYZF1XJE82K1UlOQ9BFCdQsOKRKypq8mxZeDcPn
nXoDvTqs/cZZq3McxsAx/9kRjRIVEp94dtMTvilYWdvTVlSoQmKVLbXDqVMw
16Pr4p2vQn44ctvGbZ6CGO58hze5KmRzdV5Hi+8UdGwf3qyYqkJ4VF8lLzRN
walKExmxSBVyuqLQzSl1Gu62tpQtHFAhz6Ysh7sPzILLmLp1tIsKKXQOSxy7
OAvazLP5G/apECvzf05LEbNQocKV4+egQkxszx6nlMyClKdO0oiZClnsbo/f
sHEO3gxdvdmxWoUMvhxozheah8DxzScfdSsTXRV+Gb+vCxDrbjiAW5VJa5U/
34e/C5Bbo+c5Wa9MIj5OuNT2LgDjG9XNsUSZ2M52hY9KLsKtG3y2EunKZJrD
2lHPfxHui9VpPb2mTBQ9hI2PrF2C97fLk6wvKpOnqCrNwHIJymaLqIu+ymTZ
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
YuqDh73uI/MQmGW+W+S5NHZ0Wja7bj4J690qJw69lsZ9W50vfNOaZOW7W1ha
kjTWuH9/M0N8ElysAv7s+iKNJRWlNmf1TIBxfTKK/CuN778qqOkKnoCFaSFt
WTYZLFEm6eQTOw4BaxtWUL1k8Mv1MbuP14yAbo1n/DkfGTxwuWYvf/II9AVM
ogJfGSyfm0itvDICe3/yB3pdY2FN+tMS9REw2Ll5MilaBh/gtSy7emUYpk/E
t2qXyODxxsKMcd0hOJt4MnPjWlmcqfDlgE1aP7RVyD8R3iiLu1bt5TwR3A87
F0vO9ZnK4ryZq9Svbv2gaauxLmqHLPafFoyp5OuHnsne97Nesvizw5tLct59
sG/zoddfYmWxoekW6oB6L2yp3RWynl8Otypmp78u7oIPdDYffjE5HMyrFayc
0AXyq9O2d0nLYa+AOunC612wcEmYJ3yVHP6z5JgfYtgFn5VLb05iOVwmWr92
ObkTVvlsu5B2QQ5v6ZL6vD6iAwQ5DD10e+Wwd/njjXt5WiH7AufuvmE5/CI8
hzZY3ALeoxXmL6bk8A1eqSHCmq9Iw7FVwmzyeMeO2mh9kRY4l/psYFROHrul
/4pUkW+GJjfG6Y8O8phn7suNrC2NkPztd6B2rjxWebztYml6HVic2vNEM0IB
P6492PverRzOh39nOxOjgKcnTq99wlYOCd/UTma8VMDM0P5eSPgLHByTZqYf
FLDMpo2f60fLgESFTuz8rYDVtnGkzt4qBWNSaOM7z1q3lOnZk1UMuuJGHFmu
irgntXjrhR35IJOteMZipRIO4qHmxxalQ7jf3cd6/5Tx2vUTH8vVctBS2Yes
u63K2MMn7c2ZkhzksbqqvaNbGTt8eLC80+870m+R1X08oYxfTr7+UZyXi4bi
9/YurFDBK7f9EOvwBhQi2H/TWUkFt8g0xfkezEPl7Xzf5Xap4Bd1EVdd6oqQ
Y7C9TlymCn4s/a75ZlYVSnSe2J6drYJlt0aEo4EqtKj92LsuVwUL1k1spcpU
o1c11S+F8lXwstifxQMXq9GoihPlWoUKzj9v0ZtiXIPufnebPzigghv7a8Km
C2vRz4njv1TkVPHRZ63T+WwNiFLA32aqqIp362+Vmt7QgLyi3y/tV1HFzn/e
vNvt04AEt4zqP1ZXxWIOj0NS6huQ84Oziez6qvhR503p7NRGNLPqwoMuG1Xc
Qlw3JPk0I03XoL0JV1WxV2bIXi2hduTsm0lZcVMVX1ldcM/erh3d/W+g4kiQ
Ks5rDf+S87Ad9WbY7qA+UMXvrL8VZPB1oFeCkij+qSq2Ly1eJf6wA0n+fLvm
VYYqXs8ocyl61YnYVIuWnw+qYtqMRJNVZzeq7+OLj9irhp/zdsy/ahtAhXvu
xWbvV8O/j/MK+3MPosw83uh2VzVcqjtAO607iKJe8IRoeahhisY199prg2iv
E1dA/mk1XNx2b9pTdQjV/mbbMf2fGt7vU7s76tQwqk6Yn3TMUcPo/Kq+bNUx
VO7Ru5WiTMV9j8Ru/p2fRJ0rkhaeqFFxctFGpyLKFJpJPJYqq07FrQtcaZU6
U0h2eFhBVYeK05M3vhD1nEKe56bm15pQcfH1sxkmVVNo6Tbz4859VBzF02Ux
9HEaqb+Vlbv3kIpjZ/w5H5yaRUZWzZWCEVQ8cSZ8KOneLLIdjP3vURQVf+3V
ufb77Szy1VGZjY6j4tRj/xmwtc2i3K/qlYnvqfid1xSfh90ccizUDy4oomKF
RP69WHceeR2bNbUupeLS0gP/ZHbMo4v836ZLy6l4R1SKUL/XPIqzM3avqaNi
s32e993j5tFAPTbt6qbi/Vrff2cJLKClixzTXv1UPFljzK+xegEJyRe8Gxyi
4oTqC8l3zRbQ+kNW0pOTVHzeuyiacmkBWbDzlZ+fpWJwPbvJJHIB7X9TErSw
QMXeRzmr7VMX0AmLEJMrNCq+aC9+z75kAf3//2hYTWrwhlHvAvofm5vfGg==

     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
NDaD9xmNumFQ+PxZma1F476+ewlfRcOgeeF+020dGqNd7iVuEROBySq/8ysM
aJzbKyWnJysCz8DRqVVGNB6kfGqfa4vgyJJHuQUmNL5Nshnkrif8+CRor6EZ
jbKpoeZJW0WQ9+90o8kWGi0i1yumeBG+SS4+98yS9Fc3NbEvUATv4ARu3E5j
1GrZh49Ok/f7Mz/vb3OkUUW1NORNPOENtUrPhp00LpD6a+JqughYL0OV7HfT
aN4wS6IlWwR63uaNrW40Bma4uF58LIIN0nPPuewl+eI7BSXlhLdya6CTS6Or
8eSDXTWEL7efm/TYTyPXxWvu/rciODlqcb/Pj8aFFgs9BlpEEHNV2tMnkOjR
rPdbXRvh6TV1iqLDNBaFHjskT3iqsPVSQ8AxGlez8XU14a2Xx2wiJ0/SaCV5
w7+F8JhAWQ6OhdB4+lrKTfMxEQyXv5v4fpboz/GMWzhF+NctPickksah2eKh
ujMikJvt5CERTaN8fFRaFuFBtTsKiucu0aipp6h+hPDi2k2CeukrNKbqPre7
SnjSsj8pIiaexg9DSU4/Sbw7arfJ4hs06i1ICCsksb8Wa+JaMo0KCU3sInL9
2bdd2UrpNH4b12H/JPXj/W+5p96mceofv43h5PxMub0K9D0ald9Y77Ak/ZU+
VqvPyKYx7GaMjDXp/63jp/CVeWR/M18Mosl83V8z1+fmk3yI/gVxMv94os+4
biGNlh8W83K6RTDPRCv7cRGNhY32giiBCBQ7h93WltEonHzskNQkAs3QB/Jl
FTS2/hiXEb4WAagGvMUqsl8TnYjfK0VgW60fXlVD46S1pUN9oQj2cieMN9fS
6Kb183gY2Xew5JOx2joaI+UTvV1Tid9ygrOsG2m8ZxdwdedlESRbrXNraqZx
mvXeJ5Dw5oORf5c68kg/z5Q8MoKI/y6X1fGFNC4/fnlQtFcEn1rQuLuH6LVq
lV/l78R/wbPG9vbReCe8vnmTLvGfUlVm/wDxYy5XXqBC/Oa6aemXLzQan1qz
gzM+DBvEF9QdmqAxPO/l7qa2YXC69frs9DSNS59JcqOqh8F7Q7TRiW80bpnJ
mt6cOwz//18YeiU5XpeMG4b/AYBav50=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-10, 10}, {-2.7291561580627057`, 2.729155947450738}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5776577591173267`*^9, 3.5776577680987453`*^9}, 
   3.577657818283493*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "MANIPULATING", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577657879630093*^9, 3.5776579131163883`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 20}}, Typeset`size$$ = {360., {105., 110.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$2281$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$2281$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`n$$ $CellContext`x], {$CellContext`x, 0, 2 Pi}], 
      "Specifications" :> {{$CellContext`n$$, 1, 20}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {148., 153.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5776579162179956`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"To", " ", "view", " ", "value"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Plot", "[", 
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"n", " ", "x"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "20", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.577657934258601*^9, 3.577657939234736*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 20}}, Typeset`size$$ = {360., {105., 110.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$2316$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$2316$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`n$$ $CellContext`x], {$CellContext`x, 0, 2 Pi}], 
      "Specifications" :> {{$CellContext`n$$, 1, 20, Appearance -> 
         "Labeled"}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {148., 153.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.577657939962225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"n1", " ", "x"}], "]"}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"n2", " ", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n1", ",", "1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n2", ",", "1", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.577657956094859*^9, 3.5776579560996447`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n1$$ = 1, $CellContext`n2$$ = 1, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n1$$], 1, 20}, {
      Hold[$CellContext`n2$$], 1, 20}}, Typeset`size$$ = {360., {112., 117.}},
     Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n1$2345$$ = 0, $CellContext`n2$2346$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`n1$$ = 1, $CellContext`n2$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n1$$, $CellContext`n1$2345$$, 0], 
        Hold[$CellContext`n2$$, $CellContext`n2$2346$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[Sin[$CellContext`n1$$ $CellContext`x] + 
        Sin[$CellContext`n2$$ $CellContext`x], {$CellContext`x, 0, 2 Pi}, 
        PlotRange -> 2], 
      "Specifications" :> {{$CellContext`n1$$, 1, 20}, {$CellContext`n2$$, 1, 
         20}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {168., 173.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5776579573007*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Fortunately", " ", "it", " ", "is", " ", "trivial", " ", "to", " ", "add",
     " ", "an", " ", "explicit", " ", "step", " ", "size", " ", "of", " ", 
    "1", " ", "to", " ", "the", " ", "Manipulate", " ", "command"}], ",", 
   RowBox[{
   "yielding", " ", "exactly", " ", "the", " ", "same", " ", "set", " ", "of",
     " ", "possible", " ", "values", " ", "in", " ", "Manipulate", " ", "as", 
    " ", "is", " ", "returned", " ", "by", " ", 
    RowBox[{"Table", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.5776580064093637`*^9, 3.577658014993513*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{"n", ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "20", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.577658024424184*^9, 3.57765802442701*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 20, 1}}, Typeset`size$$ = {8., {0., 8.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$2379$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$2379$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`n$$, 
      "Specifications" :> {{$CellContext`n$$, 1, 20, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{253., {48., 53.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.577658026114765*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "You", " ", "can", " ", "even", " ", "use", " ", "end", " ", "points", " ",
     "and", " ", "step", " ", "sizes", " ", "that", " ", "are", " ", 
    "symbolic", " ", "expressions", " ", "rather", " ", "than", " ", "just", 
    " ", "plain", " ", 
    RowBox[{"numbers", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"n", ",", "\"\<+\>\"", ",", "m", ",", "\"\<=\>\"", ",", 
       RowBox[{"n", "+", "m"}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "a", ",", 
      RowBox[{"10", " ", "a"}], ",", 
      RowBox[{"a", "/", "12"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "a", ",", 
      RowBox[{"10", " ", "a"}], ",", 
      RowBox[{"a", "/", "12"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5776580946746798`*^9, 3.577658107587542*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`m$$ = $CellContext`a, $CellContext`n$$ = \
$CellContext`a, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], $CellContext`a, 10 $CellContext`a, 
      Rational[1, 12] $CellContext`a}, {
      Hold[$CellContext`m$$], $CellContext`a, 10 $CellContext`a, 
      Rational[1, 12] $CellContext`a}}, Typeset`size$$ = {52., {0., 8.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$2404$$ = 0, $CellContext`m$2405$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`m$$ = $CellContext`a, $CellContext`n$$ = \
$CellContext`a}, "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$2404$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$2405$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Row[{$CellContext`n$$, "+", $CellContext`m$$, 
         "=", $CellContext`n$$ + $CellContext`m$$}], 
      "Specifications" :> {{$CellContext`n$$, $CellContext`a, 
         10 $CellContext`a, 
         Rational[1, 12] $CellContext`a}, {$CellContext`m$$, $CellContext`a, 
         10 $CellContext`a, Rational[1, 12] $CellContext`a}}, "Options" :> {},
       "DefaultOptions" :> {}],
     ImageSizeCache->{258., {61., 66.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.577658111229363*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"n1", " ", "x"}], "]"}], "+", 
      RowBox[{"Sin", "[", 
       RowBox[{"n2", " ", "x"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "filling"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n1", ",", "1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n2", ",", "1", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"filling", ",", 
     RowBox[{"{", 
      RowBox[{"None", ",", "Axis", ",", "Top", ",", "Bottom"}], "}"}]}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.577658264525878*^9, 3.57765826452977*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`filling$$ = Axis, $CellContext`n1$$ = 
    1, $CellContext`n2$$ = 8.86, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n1$$], 1, 20}, {
      Hold[$CellContext`n2$$], 1, 20}, {
      Hold[$CellContext`filling$$], {None, Axis, Top, Bottom}}}, 
    Typeset`size$$ = {360., {112., 117.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n1$2437$$ = 0, $CellContext`n2$2438$$ = 
    0, $CellContext`filling$2439$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`filling$$ = None, $CellContext`n1$$ = 
        1, $CellContext`n2$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`n1$$, $CellContext`n1$2437$$, 0], 
        Hold[$CellContext`n2$$, $CellContext`n2$2438$$, 0], 
        Hold[$CellContext`filling$$, $CellContext`filling$2439$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Plot[Sin[$CellContext`n1$$ $CellContext`x] + 
        Sin[$CellContext`n2$$ $CellContext`x], {$CellContext`x, 0, 2 Pi}, 
        Filling -> $CellContext`filling$$, PlotRange -> 2], 
      "Specifications" :> {{$CellContext`n1$$, 1, 20}, {$CellContext`n2$$, 1, 
         20}, {$CellContext`filling$$, {None, Axis, Top, Bottom}}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {185., 190.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.577658269567852*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Setting", " ", "initial", " ", "values"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a1", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n1", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "p1"}], ")"}]}], "]"}]}], ",", 
        RowBox[{"a2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n2", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "p2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"20", " ", "Pi"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "1"}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n1", ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "1"}], "}"}], ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p1", ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n2", ",", 
        RowBox[{"5", "/", "4"}]}], "}"}], ",", "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "1"}], "}"}], ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"p2", ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577658526840564*^9, 3.5776585364922047`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = 1, $CellContext`a2$$ = 
    1, $CellContext`n1$$ = 1, $CellContext`n2$$ = Rational[
    5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n1$$], 1, 4}, {{
       Hold[$CellContext`a1$$], 1}, 0, 1}, {
      Hold[$CellContext`p1$$], 0, 2 Pi}, {{
       Hold[$CellContext`n2$$], 
       Rational[5, 4]}, 1, 4}, {{
       Hold[$CellContext`a2$$], 1}, 0, 1}, {
      Hold[$CellContext`p2$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {174., 179.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n1$2576$$ = 
    0, $CellContext`a1$2577$$ = 0, $CellContext`p1$2578$$ = 
    0, $CellContext`n2$2579$$ = 0, $CellContext`a2$2580$$ = 
    0, $CellContext`p2$2581$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = 1, $CellContext`a2$$ = 
        1, $CellContext`n1$$ = 1, $CellContext`n2$$ = 
        Rational[5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n1$$, $CellContext`n1$2576$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$2577$$, 0], 
        Hold[$CellContext`p1$$, $CellContext`p1$2578$$, 0], 
        Hold[$CellContext`n2$$, $CellContext`n2$2579$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$2580$$, 0], 
        Hold[$CellContext`p2$$, $CellContext`p2$2581$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{$CellContext`a1$$ 
         Sin[$CellContext`n1$$ ($CellContext`x + $CellContext`p1$$)], \
$CellContext`a2$$ 
         Cos[$CellContext`n2$$ ($CellContext`x + $CellContext`p2$$)]}, \
{$CellContext`x, 0, 20 Pi}, PlotRange -> 1, PerformanceGoal -> "Quality"], 
      "Specifications" :> {{$CellContext`n1$$, 1, 4}, {{$CellContext`a1$$, 1},
          0, 1}, {$CellContext`p1$$, 0, 2 Pi}, {{$CellContext`n2$$, 
          Rational[5, 4]}, 1, 4}, {{$CellContext`a2$$, 1}, 0, 
         1}, {$CellContext`p2$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {282., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.577658538528714*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Usings", " ", "Labels"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a1", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n1", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "p1"}], ")"}]}], "]"}]}], ",", 
        RowBox[{"a2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n2", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "p2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"20", " ", "Pi"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "1"}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n1", ",", "1", ",", "\"\<Frequency 1\>\""}], "}"}], ",", "1", 
      ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "1", ",", "\"\<Amplitude 1\>\""}], "}"}], ",", "0", 
      ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "0", ",", "\"\<Phase 1\>\""}], "}"}], ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n2", ",", 
        RowBox[{"5", "/", "4"}], ",", "\"\<Frequency 2\>\""}], "}"}], ",", 
      "1", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "1", ",", "\"\<Amplitude 2\>\""}], "}"}], ",", "0", 
      ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p2", ",", "0", ",", "\"\<Phase 2\>\""}], "}"}], ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577658572386736*^9, 3.577658579064726*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = 1, $CellContext`a2$$ = 
    1, $CellContext`n1$$ = 1, $CellContext`n2$$ = Rational[
    5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n1$$], 1, "Frequency 1"}, 1, 4}, {{
       Hold[$CellContext`a1$$], 1, "Amplitude 1"}, 0, 1}, {{
       Hold[$CellContext`p1$$], 0, "Phase 1"}, 0, 2 Pi}, {{
       Hold[$CellContext`n2$$], 
       Rational[5, 4], "Frequency 2"}, 1, 4}, {{
       Hold[$CellContext`a2$$], 1, "Amplitude 2"}, 0, 1}, {{
       Hold[$CellContext`p2$$], 0, "Phase 2"}, 0, 2 Pi}}, Typeset`size$$ = {
    360., {174., 179.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n1$2627$$ = 
    0, $CellContext`a1$2628$$ = 0, $CellContext`p1$2629$$ = 
    0, $CellContext`n2$2630$$ = 0, $CellContext`a2$2631$$ = 
    0, $CellContext`p2$2632$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = 1, $CellContext`a2$$ = 
        1, $CellContext`n1$$ = 1, $CellContext`n2$$ = 
        Rational[5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n1$$, $CellContext`n1$2627$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$2628$$, 0], 
        Hold[$CellContext`p1$$, $CellContext`p1$2629$$, 0], 
        Hold[$CellContext`n2$$, $CellContext`n2$2630$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$2631$$, 0], 
        Hold[$CellContext`p2$$, $CellContext`p2$2632$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{$CellContext`a1$$ 
         Sin[$CellContext`n1$$ ($CellContext`x + $CellContext`p1$$)], \
$CellContext`a2$$ 
         Cos[$CellContext`n2$$ ($CellContext`x + $CellContext`p2$$)]}, \
{$CellContext`x, 0, 20 Pi}, PlotRange -> 1, PerformanceGoal -> "Quality"], 
      "Specifications" :> {{{$CellContext`n1$$, 1, "Frequency 1"}, 1, 
         4}, {{$CellContext`a1$$, 1, "Amplitude 1"}, 0, 
         1}, {{$CellContext`p1$$, 0, "Phase 1"}, 0, 2 
         Pi}, {{$CellContext`n2$$, 
          Rational[5, 4], "Frequency 2"}, 1, 
         4}, {{$CellContext`a2$$, 1, "Amplitude 2"}, 0, 
         1}, {{$CellContext`p2$$, 0, "Phase 2"}, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {282., 287.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.577658580256289*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Moving", " ", "control", " ", "panel", " ", "location"}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.577658658788783*^9, 3.577658668149609*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a1", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"n1", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", "p1"}], ")"}]}], "]"}]}], ",", 
       RowBox[{"a2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"n2", " ", 
          RowBox[{"(", 
           RowBox[{"x", "+", "p2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", 
       RowBox[{"20", " ", "Pi"}]}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "1"}], ",", 
     RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n1", ",", "1", ",", "\"\<Frequency 1\>\""}], "}"}], ",", "1", 
     ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a1", ",", "1", ",", "\"\<Amplitude 1\>\""}], "}"}], ",", "0", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p1", ",", "0", ",", "\"\<Phase 1\>\""}], "}"}], ",", "0", ",", 
     
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n2", ",", 
       RowBox[{"5", "/", "4"}], ",", "\"\<Frequency 2\>\""}], "}"}], ",", "1",
      ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a2", ",", "1", ",", "\"\<Amplitude 2\>\""}], "}"}], ",", "0", 
     ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p2", ",", "0", ",", "\"\<Phase 2\>\""}], "}"}], ",", "0", ",", 
     
     RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
   RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5776586690923643`*^9, 3.57765866909547*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = 1, $CellContext`a2$$ = 
    1, $CellContext`n1$$ = 1, $CellContext`n2$$ = Rational[
    5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n1$$], 1, "Frequency 1"}, 1, 4}, {{
       Hold[$CellContext`a1$$], 1, "Amplitude 1"}, 0, 1}, {{
       Hold[$CellContext`p1$$], 0, "Phase 1"}, 0, 2 Pi}, {{
       Hold[$CellContext`n2$$], 
       Rational[5, 4], "Frequency 2"}, 1, 4}, {{
       Hold[$CellContext`a2$$], 1, "Amplitude 2"}, 0, 1}, {{
       Hold[$CellContext`p2$$], 0, "Phase 2"}, 0, 2 Pi}}, Typeset`size$$ = {
    275., {132., 136.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n1$2679$$ = 
    0, $CellContext`a1$2680$$ = 0, $CellContext`p1$2681$$ = 
    0, $CellContext`n2$2682$$ = 0, $CellContext`a2$2683$$ = 
    0, $CellContext`p2$2684$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = 1, $CellContext`a2$$ = 
        1, $CellContext`n1$$ = 1, $CellContext`n2$$ = 
        Rational[5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n1$$, $CellContext`n1$2679$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$2680$$, 0], 
        Hold[$CellContext`p1$$, $CellContext`p1$2681$$, 0], 
        Hold[$CellContext`n2$$, $CellContext`n2$2682$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$2683$$, 0], 
        Hold[$CellContext`p2$$, $CellContext`p2$2684$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{$CellContext`a1$$ 
         Sin[$CellContext`n1$$ ($CellContext`x + $CellContext`p1$$)], \
$CellContext`a2$$ 
         Cos[$CellContext`n2$$ ($CellContext`x + $CellContext`p2$$)]}, \
{$CellContext`x, 0, 20 Pi}, PlotRange -> 1, PerformanceGoal -> "Quality"], 
      "Specifications" :> {{{$CellContext`n1$$, 1, "Frequency 1"}, 1, 
         4}, {{$CellContext`a1$$, 1, "Amplitude 1"}, 0, 
         1}, {{$CellContext`p1$$, 0, "Phase 1"}, 0, 2 
         Pi}, {{$CellContext`n2$$, 
          Rational[5, 4], "Frequency 2"}, 1, 
         4}, {{$CellContext`a2$$, 1, "Amplitude 2"}, 0, 
         1}, {{$CellContext`p2$$, 0, "Phase 2"}, 0, 2 Pi}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{618., {203., 208.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.577658688925523*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Control", " ", "Panel", " ", "Dividing", " ", "lines"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a1", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n1", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "p1"}], ")"}]}], "]"}]}], ",", 
        RowBox[{"a2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n2", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "p2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"20", " ", "Pi"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "1"}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n1", ",", "1", ",", "\"\<Frequency 1\>\""}], "}"}], ",", "1", 
      ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n2", ",", 
        RowBox[{"5", "/", "4"}], ",", "\"\<Frequency 2\>\""}], "}"}], ",", 
      "1", ",", "4"}], "}"}], ",", "Delimiter", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "1", ",", "\"\<Amplitude 1\>\""}], "}"}], ",", "0", 
      ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "1", ",", "\"\<Amplitude 2\>\""}], "}"}], ",", "0", 
      ",", "1"}], "}"}], ",", "Delimiter", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "0", ",", "\"\<Phase 1\>\""}], "}"}], ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p2", ",", "0", ",", "\"\<Phase 2\>\""}], "}"}], ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577658735589189*^9, 3.577658760576922*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = 1, $CellContext`a2$$ = 
    1, $CellContext`n1$$ = 1, $CellContext`n2$$ = Rational[
    5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n1$$], 1, "Frequency 1"}, 1, 4}, {{
       Hold[$CellContext`n2$$], 
       Rational[5, 4], "Frequency 2"}, 1, 4}, {{
       Hold[$CellContext`a1$$], 1, "Amplitude 1"}, 0, 1}, {{
       Hold[$CellContext`a2$$], 1, "Amplitude 2"}, 0, 1}, {{
       Hold[$CellContext`p1$$], 0, "Phase 1"}, 0, 2 Pi}, {{
       Hold[$CellContext`p2$$], 0, "Phase 2"}, 0, 2 Pi}}, Typeset`size$$ = {
    275., {132., 136.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n1$2730$$ = 
    0, $CellContext`n2$2731$$ = 0, $CellContext`a1$2732$$ = 
    0, $CellContext`a2$2733$$ = 0, $CellContext`p1$2734$$ = 
    0, $CellContext`p2$2735$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = 1, $CellContext`a2$$ = 
        1, $CellContext`n1$$ = 1, $CellContext`n2$$ = 
        Rational[5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n1$$, $CellContext`n1$2730$$, 0], 
        Hold[$CellContext`n2$$, $CellContext`n2$2731$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$2732$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$2733$$, 0], 
        Hold[$CellContext`p1$$, $CellContext`p1$2734$$, 0], 
        Hold[$CellContext`p2$$, $CellContext`p2$2735$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{$CellContext`a1$$ 
         Sin[$CellContext`n1$$ ($CellContext`x + $CellContext`p1$$)], \
$CellContext`a2$$ 
         Cos[$CellContext`n2$$ ($CellContext`x + $CellContext`p2$$)]}, \
{$CellContext`x, 0, 20 Pi}, PlotRange -> 1, PerformanceGoal -> "Quality"], 
      "Specifications" :> {{{$CellContext`n1$$, 1, "Frequency 1"}, 1, 
         4}, {{$CellContext`n2$$, 
          Rational[5, 4], "Frequency 2"}, 1, 4}, 
        Delimiter, {{$CellContext`a1$$, 1, "Amplitude 1"}, 0, 
         1}, {{$CellContext`a2$$, 1, "Amplitude 2"}, 0, 1}, 
        Delimiter, {{$CellContext`p1$$, 0, "Phase 1"}, 0, 2 
         Pi}, {{$CellContext`p2$$, 0, "Phase 2"}, 0, 2 Pi}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{618., {203., 208.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.577658763074881*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Control", " ", "Panel", " ", "descriptions", " ", "and", " ", "text", " ",
     "style"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a1", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"n1", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "p1"}], ")"}]}], "]"}]}], ",", 
        RowBox[{"a2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"n2", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "p2"}], ")"}]}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", 
        RowBox[{"20", " ", "Pi"}]}], "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "1"}], ",", 
      RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}]}], "]"}], ",", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Horizontal\>\"", ",", "12", ",", "Bold"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n1", ",", "1", ",", "\"\<Frequency\>\""}], "}"}], ",", "1", 
      ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a1", ",", "1", ",", "\"\<Amplitude\>\""}], "}"}], ",", "0", 
      ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "0", ",", "\"\<Phase\>\""}], "}"}], ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}], ",", "Delimiter", ",", 
    RowBox[{"Style", "[", 
     RowBox[{"\"\<Vertical\>\"", ",", "12", ",", "Bold"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n2", ",", 
        RowBox[{"5", "/", "4"}], ",", "\"\<Frequency\>\""}], "}"}], ",", "1", 
      ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a2", ",", "1", ",", "\"\<Amplitude\>\""}], "}"}], ",", "0", 
      ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p2", ",", "0", ",", "\"\<Phase\>\""}], "}"}], ",", "0", ",", 
      RowBox[{"2", " ", "Pi"}]}], "}"}], ",", 
    RowBox[{"ControlPlacement", "\[Rule]", "Left"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.577658839709588*^9, 3.577658864760255*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a1$$ = 1, $CellContext`a2$$ = 
    1, $CellContext`n1$$ = 1, $CellContext`n2$$ = Rational[
    5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[
       Style["Horizontal", 12, Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`n1$$], 1, "Frequency"}, 1, 4}, {{
       Hold[$CellContext`a1$$], 1, "Amplitude"}, 0, 1}, {{
       Hold[$CellContext`p1$$], 0, "Phase"}, 0, 2 Pi}, {
      Hold[
       Style["Vertical", 12, Bold]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`n2$$], 
       Rational[5, 4], "Frequency"}, 1, 4}, {{
       Hold[$CellContext`a2$$], 1, "Amplitude"}, 0, 1}, {{
       Hold[$CellContext`p2$$], 0, "Phase"}, 0, 2 Pi}}, Typeset`size$$ = {
    272., {130., 135.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`n1$2781$$ = 
    0, $CellContext`a1$2782$$ = 0, $CellContext`p1$2783$$ = 
    0, $CellContext`n2$2784$$ = 0, $CellContext`a2$2785$$ = 
    0, $CellContext`p2$2786$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`a1$$ = 1, $CellContext`a2$$ = 
        1, $CellContext`n1$$ = 1, $CellContext`n2$$ = 
        Rational[5, 4], $CellContext`p1$$ = 0, $CellContext`p2$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n1$$, $CellContext`n1$2781$$, 0], 
        Hold[$CellContext`a1$$, $CellContext`a1$2782$$, 0], 
        Hold[$CellContext`p1$$, $CellContext`p1$2783$$, 0], 
        Hold[$CellContext`n2$$, $CellContext`n2$2784$$, 0], 
        Hold[$CellContext`a2$$, $CellContext`a2$2785$$, 0], 
        Hold[$CellContext`p2$$, $CellContext`p2$2786$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      ParametricPlot[{$CellContext`a1$$ 
         Sin[$CellContext`n1$$ ($CellContext`x + $CellContext`p1$$)], \
$CellContext`a2$$ 
         Cos[$CellContext`n2$$ ($CellContext`x + $CellContext`p2$$)]}, \
{$CellContext`x, 0, 20 Pi}, PlotRange -> 1, PerformanceGoal -> "Quality"], 
      "Specifications" :> {
        Style[
        "Horizontal", 12, Bold], {{$CellContext`n1$$, 1, "Frequency"}, 1, 
         4}, {{$CellContext`a1$$, 1, "Amplitude"}, 0, 
         1}, {{$CellContext`p1$$, 0, "Phase"}, 0, 2 Pi}, Delimiter, 
        Style["Vertical", 12, Bold], {{$CellContext`n2$$, 
          Rational[5, 4], "Frequency"}, 1, 
         4}, {{$CellContext`a2$$, 1, "Amplitude"}, 0, 
         1}, {{$CellContext`p2$$, 0, "Phase"}, 0, 2 Pi}}, 
      "Options" :> {ControlPlacement -> Left}, "DefaultOptions" :> {}],
     ImageSizeCache->{608., {203., 208.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.5776588675407133`*^9}]
}, Open  ]]
},
WindowSize->{740, 733},
WindowMargins->{{Automatic, 254}, {39, Automatic}},
FrontEndVersion->"8.0 for Linux x86 (64-bit) (October 10, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 370, 9, 71, "Input"],
Cell[952, 33, 284, 10, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1273, 48, 437, 12, 71, "Input"],
Cell[1713, 62, 291, 9, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2041, 76, 489, 14, 71, "Input"],
Cell[2533, 92, 317, 10, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2887, 107, 242, 6, 50, "Input"],
Cell[3132, 115, 116, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3285, 123, 302, 8, 79, "Input"],
Cell[3590, 133, 100, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3727, 140, 240, 6, 50, "Input"],
Cell[3970, 148, 73, 1, 30, "Output"]
}, Open  ]],
Cell[4058, 152, 257, 6, 50, "Input"],
Cell[4318, 160, 448, 12, 88, "Input"],
Cell[4769, 174, 143, 3, 30, "Input"],
Cell[CellGroupData[{
Cell[4937, 181, 239, 5, 50, "Input"],
Cell[5179, 188, 147, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5363, 196, 489, 13, 50, "Input"],
Cell[5855, 211, 272, 7, 40, "Output"]
}, Open  ]],
Cell[6142, 221, 195, 4, 30, "Input"],
Cell[CellGroupData[{
Cell[6362, 229, 125, 2, 30, "Input"],
Cell[6490, 233, 202, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6729, 243, 124, 2, 30, "Input"],
Cell[6856, 247, 99, 2, 30, "Output"]
}, Open  ]],
Cell[6970, 252, 92, 1, 30, "Input"],
Cell[CellGroupData[{
Cell[7087, 257, 382, 11, 50, "Input"],
Cell[7472, 270, 502, 10, 43, "Message"],
Cell[7977, 282, 123, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8137, 290, 152, 3, 30, "Input"],
Cell[8292, 295, 88, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8417, 301, 524, 14, 50, "Input"],
Cell[8944, 317, 12057, 203, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21038, 525, 486, 14, 50, "Input"],
Cell[21527, 541, 24982, 417, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46546, 963, 296, 6, 69, "Input"],
Cell[46845, 971, 73, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46955, 977, 222, 5, 50, "Input"],
Cell[47180, 984, 115, 3, 30, "Output"]
}, Open  ]],
Cell[47310, 990, 361, 8, 69, "Input"],
Cell[CellGroupData[{
Cell[47696, 1002, 321, 9, 30, "Input"],
Cell[48020, 1013, 275, 9, 30, "Output"]
}, Open  ]],
Cell[48310, 1025, 309, 7, 50, "Input"],
Cell[CellGroupData[{
Cell[48644, 1036, 342, 10, 50, "Input"],
Cell[48989, 1048, 318, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49344, 1062, 363, 9, 69, "Input"],
Cell[49710, 1073, 268, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50015, 1087, 600, 15, 88, "Input"],
Cell[50618, 1104, 153, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50808, 1113, 410, 11, 50, "Input"],
Cell[51221, 1126, 69, 1, 30, "Output"]
}, Open  ]],
Cell[51305, 1130, 640, 18, 69, "Input"],
Cell[CellGroupData[{
Cell[51970, 1152, 416, 11, 69, "Input"],
Cell[52389, 1165, 140, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52566, 1173, 451, 11, 69, "Input"],
Cell[53020, 1186, 72, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53129, 1192, 401, 10, 50, "Input"],
Cell[53533, 1204, 139, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53709, 1213, 529, 13, 69, "Input"],
Cell[54241, 1228, 87, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54365, 1234, 393, 12, 50, "Input"],
Cell[54761, 1248, 379, 13, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55177, 1266, 224, 5, 50, "Input"],
Cell[55404, 1273, 442, 16, 53, "Output"]
}, Open  ]],
Cell[55861, 1292, 245, 6, 50, "Input"],
Cell[CellGroupData[{
Cell[56131, 1302, 156, 5, 54, InheritFromParent],
Cell[56290, 1309, 157, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56484, 1319, 1076, 27, 126, "Input"],
Cell[57563, 1348, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57670, 1354, 647, 16, 69, "Input"],
Cell[58320, 1372, 120, 3, 30, "Output"]
}, Open  ]],
Cell[58455, 1378, 163, 3, 50, "Input"],
Cell[CellGroupData[{
Cell[58643, 1385, 280, 8, 30, "Input"],
Cell[58926, 1395, 507, 18, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59470, 1418, 351, 9, 50, "Input"],
Cell[59824, 1429, 147, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60008, 1438, 294, 8, 30, "Input"],
Cell[60305, 1448, 108, 3, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60450, 1456, 327, 9, 69, "Input"],
Cell[60780, 1467, 116, 3, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60933, 1475, 256, 8, 30, "Input"],
Cell[61192, 1485, 294, 10, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61523, 1500, 202, 5, 50, "Input"],
Cell[61728, 1507, 157, 5, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61922, 1517, 497, 14, 50, "Input"],
Cell[62422, 1533, 323, 10, 30, "Output"]
}, Open  ]],
Cell[62760, 1546, 501, 10, 88, "Input"],
Cell[CellGroupData[{
Cell[63286, 1560, 503, 14, 50, "Input"],
Cell[63792, 1576, 12800, 218, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76629, 1799, 390, 11, 50, "Input"],
Cell[77022, 1812, 17024, 325, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94083, 2142, 652, 19, 50, "Input"],
Cell[94738, 2163, 28721, 478, 447, 21614, 360, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123496, 2646, 795, 24, 69, "Input"],
Cell[124294, 2672, 36709, 610, 375, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161040, 3287, 1232, 30, 126, "Input"],
Cell[162275, 3319, 566, 17, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[162878, 3341, 948, 31, 69, "Input"],
Cell[163829, 3374, 460, 15, 30, "Output"],
Cell[164292, 3391, 16708, 280, 236, "Output"],
Cell[181003, 3673, 55389, 917, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236429, 4595, 510, 14, 50, "Input"],
Cell[236942, 4611, 1539, 32, 318, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238518, 4648, 609, 17, 50, "Input"],
Cell[239130, 4667, 1565, 32, 318, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240732, 4704, 637, 18, 50, "Input"],
Cell[241372, 4724, 1829, 37, 358, "Output"]
}, Open  ]],
Cell[243216, 4764, 619, 12, 88, "Input"],
Cell[CellGroupData[{
Cell[243860, 4780, 221, 5, 30, "Input"],
Cell[244084, 4787, 1473, 31, 118, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245594, 4823, 935, 23, 88, "Input"],
Cell[246532, 4848, 2089, 41, 144, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248658, 4894, 844, 24, 50, "Input"],
Cell[249505, 4920, 2178, 43, 392, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251720, 4968, 1619, 47, 107, "Input"],
Cell[253342, 5017, 2939, 58, 586, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256318, 5080, 1950, 56, 126, "Input"],
Cell[258271, 5138, 3166, 61, 586, "Output"]
}, Open  ]],
Cell[261452, 5202, 222, 5, 50, "Input"],
Cell[CellGroupData[{
Cell[261699, 5211, 1874, 57, 126, "Input"],
Cell[263576, 5270, 3190, 61, 428, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266803, 5336, 2079, 58, 145, "Input"],
Cell[268885, 5396, 3210, 61, 428, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272132, 5462, 2284, 63, 164, "Input"],
Cell[274419, 5527, 3432, 67, 428, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
